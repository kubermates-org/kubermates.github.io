<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Automation on Kubermates</title><link>https://kubermates.org/tags/automation/</link><description>Recent content in Automation on Kubermates</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 18 Jul 2025 08:41:53 +0000</lastBuildDate><atom:link href="https://kubermates.org/tags/automation/index.xml" rel="self" type="application/rss+xml"/><item><title>ðŸ§© GitHub Actions Composite vs Reusable Workflows</title><link>https://kubermates.org/blog/github-actions-composite-vs-reusable-workflows-4bih/</link><pubDate>Fri, 18 Jul 2025 08:41:53 +0000</pubDate><guid>https://kubermates.org/blog/github-actions-composite-vs-reusable-workflows-4bih/</guid><description>&lt;h2 id="how-to-standardize-and-supercharge-your-cicd-pipelines-across-projects"&gt;How to standardize and supercharge your CI/CD pipelines across projects&lt;/h2&gt;
&lt;p&gt;When your teams manage multiple projects with similar deployment patterns, repeating the same GitHub Actions steps over and over can become tedious, error-prone, and hard to maintain&lt;/p&gt;
&lt;p&gt;Thankfully, GitHub Actions offers two powerful solutions to help &lt;strong&gt;standardize, reuse, and scale your CI/CD pipelines&lt;/strong&gt;: &lt;strong&gt;Composite Actions&lt;/strong&gt; and &lt;strong&gt;Reusable Workflows&lt;/strong&gt;. When used together, they form a clean, modular, and DRY (donâ€™t repeat yourself) CI/CD strategy&lt;/p&gt;</description></item><item><title>Karmada: Deep Dive into Managing Multiple AKS Clusters ðŸš€</title><link>https://kubermates.org/blog/karmada-deep-dive-into-managing-multiple-aks-clusters-1j08/</link><pubDate>Mon, 09 Sep 2024 07:00:23 +0000</pubDate><guid>https://kubermates.org/blog/karmada-deep-dive-into-managing-multiple-aks-clusters-1j08/</guid><description>&lt;p&gt;In todayâ€™s cloud-driven world, Kubernetes has become the go-to platform for running containerized applications. If you&amp;rsquo;re using Microsoft Azure Kubernetes Service (AKS), you know how powerful it can be. But what if youâ€™re managing not just one, but multiple AKS clusters across different environments? Sounds a bit overwhelming, right? ðŸ˜…&lt;/p&gt;
&lt;p&gt;Thatâ€™s where &lt;strong&gt;Karmada&lt;/strong&gt; (Kubernetes Armada) comes to the rescue! Karmada is like your multi-cluster superhero, helping you deploy and manage applications across multiple AKS clusters as if they were one big happy family. This deep dive will take you through Karmadaâ€™s architecture, installation process, advanced deployment scenarios, best strategies, and how to integrate Karmada into your CI/CD pipelines with practical examples. ðŸŒŸ&lt;/p&gt;</description></item></channel></rss>