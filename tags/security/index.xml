<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Security on Kubermates</title><link>https://kubermates.org/tags/security/</link><description>Recent content in Security on Kubermates</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 06 May 2025 10:13:27 +0000</lastBuildDate><atom:link href="https://kubermates.org/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>Mainframes Are the New AI Infrastructure. Protect it with Secure AI</title><link>https://kubermates.org/docs/2025-05-06-mainframes-are-the-new-ai-infrastructure-protect-it-with-secure-ai/</link><pubDate>Tue, 06 May 2025 10:13:27 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-06-mainframes-are-the-new-ai-infrastructure-protect-it-with-secure-ai/</guid><description>Mainframes Are the New AI Infrastructure. Protect it with Secure AI Mainframes: AI Infrastructure for Next Generation Applications AI and Containerization on the Mainframe Introducing Aqua Secure AI Bringing Aqua Security to IBM Z and IBM LinuxONE Modernize Without Compromise If your AI workloads run in containers, then securing those containers is the first and most important step in protecting your AI. And as enterprises begin to deploy containerized AI workloads on Red Hat OpenShift for mainframe environments, that priority becomes even more urgent. IBM Z and IBM LinuxONE, long trusted to power the world’s most critical business systems are now evolving into innovation hubs, supporting advanced, containerized applications. With this transformation comes a new challenge: securing the infrastructure behind your most sensitive and high-stakes workloads The rise of generative AI and large language models (LLMs) has changed how organizations build and deliver value. From real-time fraud detection to intelligent customer support, AI is becoming embedded in nearly every business function. According to a recent McKinsey study , “ 78 percent of respondents say their organizations use AI in at least one business function, up from 72 percent in early 2024. ” These AI workloads are built and deployed in containers. Why? Containers offer portability, scalability, and efficiency, which makes them ideal for AI training, inference, and everything in between. IDC projects that 1 billion new logical applications will be created by 2028, resulting in more than 10 billion container instances across enterprise environments. These billions of containers won’t just run in a general purpose cloud. They will be deployed on purpose built hardware.</description></item><item><title>Shadow Roles: AWS Defaults Can Open the Door to Service Takeover</title><link>https://kubermates.org/docs/2025-04-29-shadow-roles-aws-defaults-can-open-the-door-to-service-takeover/</link><pubDate>Tue, 29 Apr 2025 16:16:07 +0000</pubDate><guid>https://kubermates.org/docs/2025-04-29-shadow-roles-aws-defaults-can-open-the-door-to-service-takeover/</guid><description>Our research uncovered security concerns in the deployment of resources within a few AWS services, specifically in the default AWS service roles. These roles, often created automatically or recommended during setup, grant overly broad permissions, such as full S3 access. These default roles silently introduce attack paths that allow privilege escalation, cross-service access, and even potential account compromise. Security Threats (120) Container Security (118) Kubernetes Security (97) Cloud Native Security (84) Aqua Open Source (49) Image Vulnerability Scanning (49) AWS Security (38) Runtime Security (38) Aqua Security (37) Vulnerability Management (36) Docker Security (35) Software Supply Chain Security (29) CSPM (28) Cloud compliance (25) DevSecOps (25) Container Vulnerability (24) CI/CD (17) CNAPP (17) Supply Chain Attacks (13) Secrets (12) Application Security (11) Serverless-Security (11) Kubernetes (10) ebpf (10) Cloud security (9) Host Security (9) Advanced malware protection (8) Cloud security conferences (8) Fargate (8) Hybrid Cloud Security (8) Malware Attacks (8) Cloud Workload Protection Platform CWPP (7) Attack Vector (6) Container platforms (6) Google cloud security (6) OpenShift (6) SBOMs (6) Secure VM (6) Security Policy (6) Infrastructure-as-Code (IaC) (5) Security Automation (5) Windows Containers (5) Azure security (4) Docker containers (4) Kubernetes RBAC (4) Service Mesh (4) Container Deployment (3) IBM Cloud (3) Microservices (3) Nano-Segmentation (3) Agentless Security (2) FaaS (2) Network Firewall (2) VMware Tanzu (2) code security (2) Advanced Threat Mitigation (1) Cloud VM (1) Customer Support (1) Drift Prevention (1) Kubernetes Authorization (1) Network (1) shift Left security (1) Aqua Security is the largest pure-play cloud native security company, providing customers the freedom to innovate and accelerate their digital transformations. The Aqua Platform is the leading Cloud Native Application Protection Platform (CNAPP) and provides prevention, detection, and response automation across the entire application lifecycle to secure the supply chain, secure cloud infrastructure and secure running workloads wherever they are deployed. Aqua customers are among the world’s largest enterprises in financial services, software, media, manufacturing and retail, with implementations across a broad range of cloud providers and modern technology stacks spanning containers, serverless functions and cloud VMs. Automate DevSecOps Modernize Security Compliance and Auditing Serverless Containers &amp;amp; Functions Hybrid and Multi Cloud Kubernetes Security OpenShift Security Docker Security AWS Cloud Security Azure Cloud Security Google Cloud Security VMware PKS Security Contact Us Contact Support Aqua Cloud native security Open Source Container Security Platform Integrations Live Webinars O’Reilly Book: Kubernetes Security Cloud native Wiki About Aqua Newsroom Careers.</description></item><item><title>What’s Really Happening in Your Containers? Aqua’s Risk Assessment Has the Answer</title><link>https://kubermates.org/docs/2025-04-23-what-s-really-happening-in-your-containers-aqua-s-risk-assessment-has-the-answer/</link><pubDate>Wed, 23 Apr 2025 12:12:36 +0000</pubDate><guid>https://kubermates.org/docs/2025-04-23-what-s-really-happening-in-your-containers-aqua-s-risk-assessment-has-the-answer/</guid><description>What’s Really Happening in Your Containers? Aqua’s Risk Assessment Has the Answer Beyond the Static: Why Runtime Context Matters Cutting Through the Noise What You’ll Gain from CSRA Built on a Decade of Threat Research A Smarter First Step Get Started Today Containers may be mainstream, but securing them in production remains a moving target. As AI adoption scales and environments grow more complex, so too do the risks, especially at runtime, where traditional tools struggle to provide meaningful visibility. These are not legacy exploits like port scans or brute force attempts. Attackers are targeting what happens inside your environment, at runtime, where misconfigurations, unexpected behaviors, and subtle anomalies can quietly introduce business risk. Yet most security teams are flying blind in production. They have tools that check for vulnerabilities before deployment, scan code for secrets, or assess infrastructure misconfigurations. What they don’t have is visibility into what’s actually happening right now, in the workloads already running in their environment. That’s the gap Aqua is closing with the launch of the Container Security Risk Assessment (CSRA). Security tooling has largely focused on pre-production controls like image scanning, CI/CD pipeline checks, and IaC validation. It is logical, and even easier than runtime. But once containers are running, things change. Configurations drift.</description></item><item><title>Aqua Security Achieves FedRAMP® High Authorization</title><link>https://kubermates.org/docs/2025-04-08-aqua-security-achieves-fedramp-high-authorization/</link><pubDate>Tue, 08 Apr 2025 12:35:09 +0000</pubDate><guid>https://kubermates.org/docs/2025-04-08-aqua-security-achieves-fedramp-high-authorization/</guid><description>Aqua Security Achieves FedRAMP® High Authorization What Is FedRAMP High and Why Does It Matter? Aqua U. S. Gov: Built for the Public Sector Helping Public and Private Organizations Move Forward A More Secure Cloud Native Future Starts Here Aqua Security’s Cloud Native Application Protection Platform (CNAPP) has achieved FedRAMP® High Impact Authorization, making Aqua one of the few CNAPP providers authorized at the highest level of federal cloud security compliance. This milestone opens the door for U. S. federal agencies, commercial organizations that require FedRAMP High, and cloud service providers operating in FedRAMP-authorized environments to confidently use Aqua’s platform for securing their cloud native applications. We met more than 400 rigorous security controls, giving federal agencies and commercial organizations the peace of mind that they can adopt cloud native technologies while meeting the highest security standards. FedRAMP (Federal Risk and Authorization Management Program) is a United States government-wide program that standardizes security assessments for cloud products and services. FedRAMP High is the most stringent level, designed for cloud services that manage highly sensitive data related to national security, public health, and other sensitive government functions. Achieving this level of authorization involves an extensive review of security controls, practices, and monitoring processes. The result: confidence that the platform is built to withstand today’s complex cyber threats. However, FedRAMP isn’t just about security; it also plays a critical role in compliance.</description></item><item><title>Tomcat in the Crosshairs: New Research Reveals Ongoing Attacks</title><link>https://kubermates.org/docs/2025-04-02-tomcat-in-the-crosshairs-new-research-reveals-ongoing-attacks/</link><pubDate>Wed, 02 Apr 2025 12:00:49 +0000</pubDate><guid>https://kubermates.org/docs/2025-04-02-tomcat-in-the-crosshairs-new-research-reveals-ongoing-attacks/</guid><description>Tomcat in the Crosshairs: New Research Reveals Ongoing Attacks Tomcat Campaign 25′: Attack Flow Detecting This Malware and Protecting your Environments Mitigation of Tomcat environments Indications of Compromise (IOCs) News headlines reported that it took just 30 hours for attackers to exploit a newly discovered vulnerability in Apache Tomcat servers. But what does this mean for workloads relying on Tomcat? Aqua Nautilus researchers discovered a new attack campaign targeting Apache Tomcat. In this blog, we shed light on newly discovered malware that targets Tomcat servers to hijack resources. After gaining initial access, the attackers uploads encrypted and encoded payloads that establish backdoors and persistence mechanisms. They then deploy two binaries disguised as kernel processes to exploit the server. The attack infrastructure appears to be relatively new, and code snippets suggest possible links to a Chinese-speaking threat actor. In this blog, we break down how the attack works—and how to stop it. The campaign targets Apache Tomcat servers and deploys encrypted payloads designed to run on both Windows and Linux systems. Once executed, the attack disguises itself, steals SSH credentials to spread laterally, and ultimately hijacks resources for cryptocurrency mining. It all starts with a brute-force attempt from a remote server using a Python script, which tests commonly used usernames and weak passwords on the Tomcat management console (e. g. , username “Tomcat” and password “123456”).</description></item><item><title>Cut Through Alert Noise and Fix Toxic Combinations First</title><link>https://kubermates.org/docs/2025-03-27-cut-through-alert-noise-and-fix-toxic-combinations-first/</link><pubDate>Thu, 27 Mar 2025 17:13:45 +0000</pubDate><guid>https://kubermates.org/docs/2025-03-27-cut-through-alert-noise-and-fix-toxic-combinations-first/</guid><description>Cut Through Alert Noise and Fix Toxic Combinations First See the Full Picture: Prioritizing Risk from Code Commit to Runtime Making Risk-Based Vulnerability Management Actionable with the New Issues Page Real-World Toxic Combinations That Put You at Risk Redefining Cloud Native Vulnerability Management Not every security alert is a threat, but the right combination can bring down your cloud native and containerized applications. Security incidents rarely happen because of a single weak point. Instead, they stem from toxic combinations. A misconfigured workload might seem harmless on its own, but add exposed credentials and an unpatched vulnerability, and attackers have a direct path to exploitation. Traditional vulnerability scanners surface thousands of issues, yet many tools treat vulnerabilities, misconfigurations, malware, and exposed credentials as isolated problems rather than recognizing how they can combine to create real attack scenarios Without understanding the full attack surface and how risks interact, security teams end up chasing alerts instead of preventing breaches. Instead of drowning in alerts, you need context, a way to connect security findings across the entire cloud native application lifecycle. Aqua provides that visibility, correlating risks from the first line of code to runtime so security teams can focus on what is actually exploitable, not just what is flagged. But risk prioritization is not just about what exists, it is about what an attacker can actually access and exploit. A vulnerability might seem critical, but is it isolated in a test environment, restricted within an internal network, or exposed in a production system accessible from the internet? For example, a banking application with an unpatched critical vulnerability might seem like an urgent issue, but if it is running in a segmented test environment, the risk is far lower than if the same vulnerability exists in a publicly accessible production system. Aqua assesses network exposure, identifying whether a CVE is just a theoretical risk or if it is publicly accessible and exploitable. By linking misconfigurations, exposed credentials, and network exposure with known vulnerabilities, Aqua surfaces toxic combinations that create real world attack paths. Aqua also connects these risks across hybrid and multi-cloud environments, ensuring teams have a comprehensive view of their attack surface, no matter where workloads are running.</description></item><item><title>IngressNightmare Vulnerabilities: All You Need to Know</title><link>https://kubermates.org/docs/2025-03-26-ingressnightmare-vulnerabilities-all-you-need-to-know/</link><pubDate>Wed, 26 Mar 2025 13:15:57 +0000</pubDate><guid>https://kubermates.org/docs/2025-03-26-ingressnightmare-vulnerabilities-all-you-need-to-know/</guid><description>IngressNightmare Vulnerabilities: All You Need to Know What is the Ingress Controller Understanding the IngressNightmare vulnerabilities Vulnerabilities Details and Impact Are you Affected? Detection and Mitigation Mitigating Vulnerabilities with Aqua Detecting and Mitigating with Aqua Trivy Vulnerability Impact Across Managed Kubernetes Platforms CVE-2025-1974 * CVE-2025-24514 * CVE-2025-1097 * CVE-2025-1098 * CVE-2025-24513 On March 24, 2025, a set of critical vulnerabilities (CVE-2025-1097, CVE-2025-1098, CVE-2025-24514, and CVE-2025-1974 — collectively referred to as IngressNightmare was disclosed in the ingress-nginx Controller for Kubernetes. These vulnerabilities could lead to a complete cluster takeover by granting attackers unauthorized access to all secrets stored across all namespaces in the Kubernetes cluster. In Kubernetes, an Ingress Controller manages external access to services within a cluster, typically via HTTP or HTTPS. The ingress NGINX Controller, built on the NGINX web server , is widely used to route incoming traffic to the appropriate backend services based on defined rules. HTTP HTTPS NGINX web server The disclosed vulnerabilities include: CVE-2025-1974 (CVSS Score 9.8 Critical) Allows unauthenticated attackers with pod network access to execute arbitrary code in the ingress-nginx controller, potentially leading to full cluster takeover. CVE-2025-24514, CVE-2025-1097, CVE-2025-1098 (CVSS Score 8.8 High) Involve improper handling of Ingress annotations that can lead to code execution or unauthorized data access. CVE-2025-24513 (CVSS Score 4.8 Medium) Involves directory traversal that can lead to DoS or limited secret disclosure. The researchers who found these vulnerabilities indicated that over 40% of cloud environments were vulnerable to these remote code execution (RCE) risks. Their analysis discovered over 6,500 clusters, including those of Fortune 500 companies, that publicly expose the admission controllers of vulnerable Kubernetes ingress controllers to the public internet, placing them at immediate critical risk. The most critical issue, CVE-2025-1974, affects the admission controller component of the Ingress NGINX Controller. It allows remote code execution through a malicious Ingress object, potentially exposing secrets and compromising the entire cluster. An exploit was published on GitHub.</description></item><item><title>How the Google-Wiz acquisition redefines cloud security</title><link>https://kubermates.org/docs/2025-03-24-how-the-google-wiz-acquisition-redefines-cloud-security/</link><pubDate>Mon, 24 Mar 2025 16:36:45 +0000</pubDate><guid>https://kubermates.org/docs/2025-03-24-how-the-google-wiz-acquisition-redefines-cloud-security/</guid><description>How the Google-Wiz acquisition redefines cloud security CNAPP is Dead! Long Live CNAPP! What does the future hold for our customers? Google’s acquisition of Wiz, announced last week, is a pivotal moment as it marks a strategic shift in how cyber security will evolve over the next few years. It instantly turns Google into a major player in security, adding Wiz to other building blocks Google has racked up in the past couple of years, most notably Mandiant and Google Chronicle. Google will be a new gorilla in the security market, just as Microsoft created a thriving, multi-billion dollar business out of the Defender product line. But while Microsoft has a long history of “owning” operating systems, servers, and Office applications, and is leveraging that to expand its footprint, Google is new to the enterprise security business. In the first phase of public cloud adoption, the “lift and shift” phase, CSPM (cloud security posture management) emerged to ensure proper configuration of cloud services, and CWPP (cloud workload protection platforms) to monitor and protect workloads running in the cloud. The second phase of cloud adoption, the cloud native phase, driven by technologies such as containers, serverless functions, CI/CD, and orchestration (Kubernetes), imparted an even more dramatic change in security – the integration of multiple silos of application related security information. It introduced integrated shift left capabilities , providing a broader risk-based approach to vulnerability management, hardening, and incident management. Thus CNAPP (cloud native application protection platforms) was born. In the early days of cloud services, the cloud providers adopted the shared responsibility model in which some responsibilities were borne by them (such as infrastructure and physical security), others were clearly on the shoulders of customers (configuring of services, their data, their users, their applications), and there’s been a non-negligible area of “shared responsibility” where the answer is often “it depends”. I believe that with this move, Google is shifting the borders within this model and will be offering more of the posture management and visibility to customers as part of its infrastructure. After all this is what Wiz has become famous for – agentless scanning of the cloud estate, providing broad visibility and risk assessment. And this is something a cloud provider can easily integrate into cloud operations.</description></item><item><title>Supply Chain Security Risk: GitHub Action tj-actions/changed-files Compromised</title><link>https://kubermates.org/docs/2025-03-16-supply-chain-security-risk-github-action-tj-actions-changed-files-compromised/</link><pubDate>Sun, 16 Mar 2025 15:56:32 +0000</pubDate><guid>https://kubermates.org/docs/2025-03-16-supply-chain-security-risk-github-action-tj-actions-changed-files-compromised/</guid><description>Supply Chain Security Risk: GitHub Action tj-actions/changed-files Compromised Background: Understanding tj-actions/changed-files Technical Details on GitHub Action tj-actions How to Check if You’re Impacted Immediate Next Steps How Aqua Security Helps CVE-2025-30066 On March 14th, 2025, security researchers discovered a critical software supply chain vulnerability in the widely-used GitHub Action tj-actions/changed-files ( CVE-2025-30066 ). This vulnerability allows remote attackers to expose CI/CD secrets via the action’s build logs. The issue affects users who rely on the tj-actions/changed-files action in GitHub workflows to track changed files within a pull request. tj-actions/changed-files tj-actions/changed-files Due to the compromised action, sensitive CI/CD secrets are being inadvertently logged in the GitHub Actions build logs. If these logs are publicly accessible, such as in public repositories, unauthorized users could access and retrieve the clear text secrets. However, there is no evidence suggesting that the exposed secrets were transmitted to any external network. The tj-actions/changed-files action is widely used in GitHub CI/CD workflows to efficiently detect file changes within pull requests, streamlining development processes by conditionally triggering actions based on modified files. With over 23,000 active repositories and more than 1 million monthly downloads, its widespread adoption makes this compromise particularly impactful, exposing numerous organizations to potential supply chain attacks. tj-actions/changed-files According to the initial report by StepSecurity this incident was first discovered at 4PM UTC on March 14th, 2025, and isolated by 10:30 AM UTC on March 15th, 2025. But, we still warmly advise to avoid using this action until this matter is fully resolved. Initial investigation implies on a malicious commit ( hash:0e58ed8671d6b60d0890c21b07f8835ace038e67 ), and a retroactive compromise of multiple versions, possibly all versions. hash:0e58ed8671d6b60d0890c21b07f8835ace038e67 The attackers introduced malicious JavaScript code directly into the dist/index.</description></item><item><title>Stopping Sobolan Malware with Aqua Runtime Protection</title><link>https://kubermates.org/docs/2025-03-11-stopping-sobolan-malware-with-aqua-runtime-protection/</link><pubDate>Tue, 11 Mar 2025 14:01:42 +0000</pubDate><guid>https://kubermates.org/docs/2025-03-11-stopping-sobolan-malware-with-aqua-runtime-protection/</guid><description>Stopping Sobolan Malware with Aqua Runtime Protection The Attacked Workload Mapping the Attack Flow Detailed Summary of the Blocked Events Summary Indications of Compromise (IOCs) Aqua Nautilus researchers have discovered a new attack campaign targeting interactive computing environments such as Jupyter Notebooks. The attack consists of multiple stages, beginning with the download of a compressed file from a remote server. Once executed, the attacker deploys several malicious tools to exploit the server and establish persistence. This campaign poses a significant risk to cloud-native environments, as it enables unauthorized access and long-term control over compromised systems. Jupyter Notebooks In this blog, we will outline the attack stages, discuss the potential risks, and provide recommendations to strengthen security and prevent exploitation. Interactive Computing Environments or Notebook Interfaces are platforms designed for data scientists and programmers to write, execute, and analyze code interactively. There are many products available, including Jupyter Notebook , JupyterLab , Apache Zeppelin , Google Colab , Databricks Notebooks , and others. These environments are often connected to the internet and require authentication to access data or execute code. However, a simple misconfiguration can sometimes expose the server to malicious activity by hackers. Jupyter Notebook JupyterLab Apache Zeppelin Google Colab Databricks Notebooks Figure 1: Sobolan campaign attack flow The attackers gained initial access through an unauthenticated JupyterLab instance, allowing them to deploy malware and cryptominers. They first downloaded and extracted a compressed archive containing 13 malicious files, consisting of both binaries and shell scripts. Once executed, these scripts initiated multiple processes to establish persistence, hijack system resources for cryptomining, and evade detection (as shown in Figure 1).</description></item><item><title>🔐 Secure Secret Management with SOPS in Terraform &amp; Terragrunt</title><link>https://kubermates.org/blog/secure-secret-management-with-sops-in-terraform-terragrunt-231a/</link><pubDate>Wed, 26 Feb 2025 14:44:59 +0000</pubDate><guid>https://kubermates.org/blog/secure-secret-management-with-sops-in-terraform-terragrunt-231a/</guid><description>&lt;p&gt;When managing infrastructure as code (IaC), keeping secrets &lt;strong&gt;safe&lt;/strong&gt; while still making them accessible to Terraform/Terragrunt is a challenge. Storing secrets in plaintext is a &lt;strong&gt;security risk&lt;/strong&gt; 🚨—and that’s where &lt;strong&gt;SOPS&lt;/strong&gt; (Secrets OPerationS) comes in!&lt;/p&gt;
&lt;p&gt;In this guide, we’ll cover:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;✅ How to use &lt;strong&gt;SOPS&lt;/strong&gt; with &lt;strong&gt;age&lt;/strong&gt; and &lt;strong&gt;GPG&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;✅ How to configure &lt;strong&gt;SOPS with &lt;code&gt;sops.yaml&lt;/code&gt;&lt;/strong&gt; for better management&lt;/li&gt;
&lt;li&gt;✅ How to use &lt;strong&gt;Terragrunt’s built-in SOPS decryption&lt;/strong&gt; (without &lt;code&gt;run_cmd&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;✅ A &lt;strong&gt;GitHub Actions workflow&lt;/strong&gt; to securely use secrets in CI/CD&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="-why-use-sops"&gt;📌 Why Use SOPS?&lt;/h2&gt;
&lt;p&gt;SOPS is an open-source tool from Mozilla that lets you &lt;strong&gt;encrypt and decrypt&lt;/strong&gt; secrets easily. It supports multiple encryption methods, including &lt;strong&gt;GPG&lt;/strong&gt;, &lt;strong&gt;AWS KMS&lt;/strong&gt;, &lt;strong&gt;Azure Key Vault&lt;/strong&gt;, &lt;strong&gt;Google Cloud KMS&lt;/strong&gt;, and &lt;strong&gt;age&lt;/strong&gt;.&lt;/p&gt;</description></item><item><title>Admission Controllers in Kubernetes: OPA GateKeeper, Kyverno, and Azure Policy Add-on for AKS—Which One Wins? 🏆</title><link>https://kubermates.org/blog/admission-controllers-in-kubernetes-opa-gatekeeper-kyverno-and-azure-policy-add-on-for-aks-which-one-wins-237d/</link><pubDate>Tue, 17 Sep 2024 07:25:52 +0000</pubDate><guid>https://kubermates.org/blog/admission-controllers-in-kubernetes-opa-gatekeeper-kyverno-and-azure-policy-add-on-for-aks-which-one-wins-237d/</guid><description>&lt;p&gt;When managing a Kubernetes cluster, controlling what gets deployed and ensuring resources comply with security, governance, and operational policies is essential. Admission controllers act as &amp;ldquo;gatekeepers&amp;rdquo; for your cluster, ensuring only compliant resources get through. 🛡️&lt;/p&gt;
&lt;p&gt;Three popular options for extending Kubernetes&amp;rsquo; admission control functionality are &lt;strong&gt;OPA GateKeeper&lt;/strong&gt;, &lt;strong&gt;Kyverno&lt;/strong&gt;, and the &lt;strong&gt;Azure Policy Add-on for AKS&lt;/strong&gt; (which incorporates OPA GateKeeper&amp;rsquo;s engine). In this article, we’ll compare these solutions and show why &lt;strong&gt;Kyverno&lt;/strong&gt; is still the most user-friendly and versatile option for Kubernetes users. 🌊&lt;/p&gt;</description></item><item><title>🚀 Enhancing Container Security: The Complete Guide to Secure and Clean Kubernetes Clusters 🛡️🧼</title><link>https://kubermates.org/blog/enhancing-container-security-the-complete-guide-to-secure-and-clean-kubernetes-clusters-1ida/</link><pubDate>Wed, 11 Sep 2024 07:19:50 +0000</pubDate><guid>https://kubermates.org/blog/enhancing-container-security-the-complete-guide-to-secure-and-clean-kubernetes-clusters-1ida/</guid><description>&lt;p&gt;As Kubernetes continues to grow in popularity, ensuring the security and cleanliness of your container images is crucial. In this guide, we’ll cover two key strategies: &lt;strong&gt;image signing using Notary&lt;/strong&gt; 🖋️ and the &lt;strong&gt;AKS Image Cleaner (Eraser)&lt;/strong&gt; add-on 🧼. Together, they form a robust, secure, and efficient container management workflow.&lt;/p&gt;
&lt;p&gt;By the end, you&amp;rsquo;ll know how to ensure that your AKS cluster pulls only verified, trusted images and stays free of unused images that could pose a risk to your environment.&lt;/p&gt;</description></item><item><title>🌐 Securing Kubernetes Secrets in AKS: Using Azure Key Vault with Managed and User Assigned Identities 🚀</title><link>https://kubermates.org/blog/securing-kubernetes-secrets-in-aks-using-azure-key-vault-with-managed-and-user-assigned-identities-569k/</link><pubDate>Wed, 04 Sep 2024 11:35:22 +0000</pubDate><guid>https://kubermates.org/blog/securing-kubernetes-secrets-in-aks-using-azure-key-vault-with-managed-and-user-assigned-identities-569k/</guid><description>&lt;p&gt;Hello Kubernetes enthusiast! 👋 Let’s dive into a critical aspect of securing your applications running in Azure Kubernetes Service (AKS): managing secrets. While Kubernetes Secrets provide a way to manage sensitive information like passwords and API keys, they aren’t encrypted by default and can be vulnerable if not handled correctly. In this guide, we&amp;rsquo;ll explore how to securely manage secrets by integrating Azure Key Vault with AKS using both &lt;strong&gt;VM Managed Identities&lt;/strong&gt; and &lt;strong&gt;User Assigned Identities&lt;/strong&gt;. Plus, we&amp;rsquo;ll show you how to enable the Secret Store CSI Driver directly in AKS.&lt;/p&gt;</description></item><item><title>Insights on Securing Your Kubernetes Cluster with Falco 🚀🔒</title><link>https://kubermates.org/blog/insights-on-securing-your-kubernetes-cluster-with-falco-4b9g/</link><pubDate>Sun, 01 Sep 2024 12:11:29 +0000</pubDate><guid>https://kubermates.org/blog/insights-on-securing-your-kubernetes-cluster-with-falco-4b9g/</guid><description>&lt;p&gt;Falco is a powerful open-source security tool designed to monitor your Kubernetes cluster in real-time, detecting suspicious activities based on customizable rules. Implementing Falco effectively can significantly enhance your cluster’s security. In this comprehensive guide, we’ll cover everything from installing Falco to best practices for implementing rules, and how to defend against potential bypasses.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id="-1-installing-falco-in-kubernetes"&gt;🌟 1. Installing Falco in Kubernetes&lt;/h2&gt;
&lt;p&gt;Getting started with Falco is straightforward. Here’s how you can install it using Helm, a popular package manager for Kubernetes.&lt;/p&gt;</description></item><item><title>🛡️ Effective Vulnerability Monitoring in Kubernetes</title><link>https://kubermates.org/blog/effective-vulnerability-monitoring-in-kubernetes-1mge/</link><pubDate>Mon, 26 Aug 2024 10:32:34 +0000</pubDate><guid>https://kubermates.org/blog/effective-vulnerability-monitoring-in-kubernetes-1mge/</guid><description>&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Hey there, Kubernetes explorer! 🌟 As your Kubernetes environment grows, keeping it secure becomes more challenging, especially when dealing with multiple clusters. Imagine managing several clusters (spokes) and needing a single source of truth for all your security metrics—sounds like a big task, right? 🤔 That&amp;rsquo;s where &lt;strong&gt;Trivy&lt;/strong&gt;, &lt;strong&gt;Trivy Operator&lt;/strong&gt;, &lt;strong&gt;OpenTelemetry&lt;/strong&gt;, &lt;strong&gt;Prometheus&lt;/strong&gt;, and &lt;strong&gt;Grafana&lt;/strong&gt; come to the rescue.&lt;/p&gt;
&lt;p&gt;In this guide, I’ll show you how to set up Trivy and Trivy Operator in a federated Kubernetes environment, collect vulnerability data using OpenTelemetry, and centralize it using either an in-cluster Prometheus setup or managed services like &lt;strong&gt;Azure Monitor (for Prometheus)&lt;/strong&gt; and &lt;strong&gt;Grafana Cloud&lt;/strong&gt; or &lt;strong&gt;Azure Managed Grafana&lt;/strong&gt;. By the end of this, you’ll have a system that monitors vulnerabilities across all your clusters from one place. Let’s dive in! 🏊‍♂️&lt;/p&gt;</description></item><item><title>🚀 Kubernetes RBAC and Role Aggregation Made Easy</title><link>https://kubermates.org/blog/kubernetes-rbac-and-role-aggregation-made-easy-3j4o/</link><pubDate>Mon, 19 Aug 2024 21:03:46 +0000</pubDate><guid>https://kubermates.org/blog/kubernetes-rbac-and-role-aggregation-made-easy-3j4o/</guid><description>&lt;h2 id="what-is-kubernetes-rbac-"&gt;What is Kubernetes RBAC? 🤔&lt;/h2&gt;
&lt;p&gt;Kubernetes, the platform that helps you automate, scale, and manage your containerized applications, comes with a cool feature called &lt;a href="https://kubernetes.io/docs/reference/access-authn-authz/rbac/"&gt;Role-Based Access Control (RBAC)&lt;/a&gt;. Think of RBAC as a gatekeeper that controls who can do what within your Kubernetes cluster. It’s super important because it ensures that everyone and everything (like users, applications, and services) only have the permissions they need—nothing more, nothing less.&lt;/p&gt;
&lt;h2 id="the-four-pillars-of-kubernetes-rbac-"&gt;The Four Pillars of Kubernetes RBAC 🏛️&lt;/h2&gt;
&lt;p&gt;Kubernetes RBAC revolves around four main building blocks:&lt;/p&gt;</description></item></channel></rss>