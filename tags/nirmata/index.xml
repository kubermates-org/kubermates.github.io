<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nirmata on Kubermates</title><link>https://kubermates.org/tags/nirmata/</link><description>Recent content in Nirmata on Kubermates</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 20 Aug 2025 23:03:50 +0000</lastBuildDate><atom:link href="https://kubermates.org/tags/nirmata/index.xml" rel="self" type="application/rss+xml"/><item><title>Honoring Styra’s Contributions To OPA</title><link>https://kubermates.org/docs/2025-08-20-honoring-styra-s-contributions-to-opa/</link><pubDate>Wed, 20 Aug 2025 23:03:50 +0000</pubDate><guid>https://kubermates.org/docs/2025-08-20-honoring-styra-s-contributions-to-opa/</guid><description>As the creator of Open Policy Agent (OPA), Styra has played an extraordinary role in shaping the Policy as Code (PaC) movement and advancing cloud-native security and governance. This week, the founders and core team behind Styra announced that they are joining Apple. I first met the Styra team at KubeCon 2017 in Austin, when Brian Grant saw an early demo of what we were building, and suggested that I talk to them. Although we have significantly different approaches to PaC, one of my favorite moments at each KubeCon since has been catching up with folks from Styra and exchanging notes on the space. We here at Nirmata, want to take a moment to recognize and thank the entire Styra team – their founders Teemu, Tim, Torin, along with Anders, Charlie and many others – for their pioneering work. Without their vision and drive, there would be no PaC ecosystem as we know it today. At Nirmata, we know that Kyverno’s journey, and our own, would not have been possible without the foundation laid by the OPA community. The early adoption of OPA proved the need for declarative policies and automated governance. It set the standard for how organizations think about declarative policies across cloud and infrastructure environments and it will continue to play an important role in the CNCF landscape. We are also encouraged that the Styra team has found a great home at Apple. With such a strong technology leader supporting them, the OPA community can look forward to ongoing innovation, stability, and new opportunities for growth. We are excited to see what comes next in the OPA roadmap and how the project continues to evolve as a critical part of the cloud native landscape.</description></item><item><title>Nirmata Teams Dashboard Gets a Makeover: A Cleaner, Smarter Experience for Managing Kubernetes and Cloud Environments</title><link>https://kubermates.org/docs/2025-07-15-nirmata-teams-dashboard-gets-a-makeover-a-cleaner-smarter-experience-for-managin/</link><pubDate>Tue, 15 Jul 2025 08:00:09 +0000</pubDate><guid>https://kubermates.org/docs/2025-07-15-nirmata-teams-dashboard-gets-a-makeover-a-cleaner-smarter-experience-for-managin/</guid><description>We’re excited to announce a refreshed Teams Dashboard in Nirmata Control Hub. This redesign delivers a cleaner, more intuitive interface that not only looks better, it works better too. Whether you’re managing a few teams or dozens, the new dashboard streamlines how you view and interact with team-related data across your Kubernetes and cloud environments. To improve visibility and team-level accountability, the dashboard now shows how infrastructure resources are allocated across teams. You can easily see which Kubernetes clusters, namespaces, and repositories belong to each team – such as Security, Platform, or Development – and who the team members are. This makes it simpler to understand team footprints, manage access, and align infrastructure usage with organizational structure. Team cards have been completely redesigned with a cleaner layout that makes key information immediately visible. Each card now includes: This update gives you a high-level snapshot of your teams’ footprint across your infrastructure , helping you stay informed at a glance. We’ve improved how policy report assignments are surfaced on each team card, offering better visibility and preparing the groundwork for even more powerful insights and statistics in future releases. Instead of listing all teams on one long scroll, we now paginate the dashboard. You’ll see 12 teams at a time, making navigation faster and more manageable, especially for larger organizations. We’ve also made significant improvements to the Team Details page, focusing on clarity and ease of use.</description></item><item><title>Kubernetes Governance with Nirmata &amp; SUSE</title><link>https://kubermates.org/docs/2025-07-14-kubernetes-governance-with-nirmata-suse/</link><pubDate>Mon, 14 Jul 2025 08:05:54 +0000</pubDate><guid>https://kubermates.org/docs/2025-07-14-kubernetes-governance-with-nirmata-suse/</guid><description>Happy Monday, cloud-native enthusiasts! We’re thrilled to share some exciting news that marks a significant milestone for Nirmata and the broader Kubernetes community. We are proud to announce that Nirmata is now officially approved and listed in the SUSE Partner Certification &amp;amp; Solutions Catalog! This achievement isn’t just a badge; it’s a testament to our commitment to providing robust, integrated solutions that simplify Kubernetes governance and management to enhance security for enterprises. For users of SUSE and Rancher, this partnership opens up new avenues for streamlined operations and greater control over their cloud-native environments. One of the most immediate benefits of this partnership is the seamless availability of Nirmata within the Rancher ecosystem. You can now easily access Nirmata directly from your Rancher Manager interface. Navigate to Apps → Charts within your Rancher Manager, and you’ll find Nirmata listed in the Rancher Partner Catalog. This direct integration makes it incredibly easy for Rancher users to discover, deploy, and leverage Nirmata’s capabilities for Kubernetes governance, policy management, governance, and security. This collaboration between Nirmata and SUSE/Rancher brings together two powerful platforms to address critical needs in the cloud-native landscape: We are incredibly excited about the possibilities this partnership unlocks. By combining Nirmata’s powerful policy-based management with SUSE and Rancher’s robust Kubernetes management platform, we are empowering organizations to achieve greater agility, security, and efficiency in their cloud-native journeys. We encourage all SUSE and Rancher users to explore Nirmata in the Rancher Partner Catalog and the Partner Certification and Solutions Catalog , and see firsthand how our integrated solution can transform your Kubernetes governance and security operations. Stay tuned for more updates as we continue to deepen our collaboration with SUSE/Rancher and contribute to a more secure and manageable cloud-native future! To see what all the buzz is about with Nirmata, check out the Nirmata Control Hub product brief while you’re here.</description></item><item><title>Is Your Kyverno Healthy? Now You Can Know for Sure.</title><link>https://kubermates.org/docs/2025-06-30-is-your-kyverno-healthy-now-you-can-know-for-sure/</link><pubDate>Mon, 30 Jun 2025 08:00:13 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-30-is-your-kyverno-healthy-now-you-can-know-for-sure/</guid><description>Running Kyverno is essential for enforcing Kubernetes governance and security policies. But is your Kyverno setup secure, scalable, and resilient? With the latest enhancement in Nirmata Control Hub , you no longer have to guess. We’re excited to introduce the Kyverno Health Check – a new capability that provides a clear, actionable view of Kyverno’s configuration in your clusters. Whether you’re a platform engineer managing dozens of clusters or a security lead enforcing policy compliance, this feature helps to ensure that Kyverno is running optimally at all times. Kyverno by Nirmata enforces critical security, compliance, and operational policies in Kubernetes. But like any controller, its effectiveness depends on its own configuration and health. A misconfigured or unhealthy Kyverno deployment can : Kyverno Health Check ensures none of this happens by continuously and vigilantly evaluating your deployments for best practices and known risks. The new Kyverno Health Check feature in Nirmata Control Hub evaluates Kyverno deployments based on four critical categories: Each category is scored and flagged as: These results are aggregated into a Kyverno Health Grade (A to F), allowing you to view the overall state of Kyverno at a glance and drill down to address the areas that matter most. In many clusters, Kyverno components may restart frequently or be terminated due to out-of-memory (OOM) conditions. These issues often go unnoticed until policy failures occur. That’s a risk. Nirmata Control Hub detects this and gives you: You or your team can apply the fix, rescan the cluster, and watch your health grade improve.</description></item><item><title>Cut Through the DevSecOps Noise: Smart Violation Prioritization in Nirmata Control Hub</title><link>https://kubermates.org/docs/2025-06-27-cut-through-the-devsecops-noise-smart-violation-prioritization-in-nirmata-contro/</link><pubDate>Fri, 27 Jun 2025 14:54:55 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-27-cut-through-the-devsecops-noise-smart-violation-prioritization-in-nirmata-contro/</guid><description>When managing security and compliance in Kubernetes, it’s easy to get overwhelmed. As a platform engineer or administrator, you might look at your cluster or namespace and find hundreds or even thousands of violations. But not all violations are created equal. Some are critical security risks that demand immediate attention, while others are best practices that can be addressed later. The problem? Without clear guidance, most teams end up doing nothing. Not because they don’t care – but because they don’t know where to start. That’s exactly the problem we solve with Violation Summarization and Prioritization in Nirmata Control Hub. With Nirmata Control Hub, you don’t have to dig through pages of findings and all the time spent therein. With a timely glance, you get a summary report for your entire cluster or specific namespaces, showing: Nirmata Control Hub won’t just tell you what’s wrong. We prioritize violations into clear buckets: This intelligent triage lets your team focus on what matters most – without getting distracted by noise. Every prioritized finding comes with clear remediation suggestions. For example: This built-in guidance significantly reduces the mean time to remediate (MTTR) – especially for large or complex environments.</description></item><item><title>Leveling Up Policy Enforcement in Kubernetes: A Look at Kyverno 1.14 and CEL</title><link>https://kubermates.org/docs/2025-05-29-leveling-up-policy-enforcement-in-kubernetes-a-look-at-kyverno-1-14-and-cel/</link><pubDate>Thu, 29 May 2025 17:37:06 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-29-leveling-up-policy-enforcement-in-kubernetes-a-look-at-kyverno-1-14-and-cel/</guid><description>Recently, Cloud Native Live featured a session diving into the powerful integration of Common Expression Language (CEL) in Kyverno 1. 14. Hosted by Eric Durmishi and presented by Kyverno maintainers Mariam Fahmy and Charles Edward, the session introduced exciting new capabilities that enhance Kyverno’s flexibility and consistency as a policy engine for Kubernetes. At its core, Kyverno is a policy engine for Kubernetes. It enables you to define policies for validating, mutating, generating, or verifying images for resources within your cluster. When an API request, like creating a Pod, is sent to the Kubernetes API server, it passes through several stages, including authentication and authorization. Kyverno integrates as an admission webhook. The API request is forwarded to the Kyverno server, which fetches relevant policies, applies them to the resource, and then either accepts or rejects the request based on whether the resource violates the policy. Kyverno also includes components such as the Reports Controller, which generates policy reports to visualize policy results, and a Cleanup Controller, which manages unused resources based on cleanup policies. Traditionally, Kyverno used a single policy type with different rule types nested within it, such as validate, mutate, generate, and verifyImages. Policies could define rules to match or exclude specific resources. For validation, you could use patterns, deny rules, Pod Security subrules, or assertion trees.</description></item><item><title>Automate Policy Violation Tracking with Jira in Nirmata Control Hub</title><link>https://kubermates.org/docs/2025-05-14-automate-policy-violation-tracking-with-jira-in-nirmata-control-hub/</link><pubDate>Wed, 14 May 2025 10:08:17 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-14-automate-policy-violation-tracking-with-jira-in-nirmata-control-hub/</guid><description>Keeping track of Kubernetes policy violations across namespaces and clusters can be tedious, especially when teams rely on disconnected tools and manual workflows. With Nirmata Control Hub’s Jira integration, you can automatically or manually create Jira tickets for policy violations directly from the platform. This ensures accountability, reduces MTTR (mean time to resolution), and improves team productivity by embedding policy compliance into your teams’ tools. Every misconfiguration or policy violation is a potential security or compliance risk. However, identifying issues is only the first step. The real value is in closing the loop—from detection to resolution. Traditionally, teams rely on Slack alerts, dashboards, or Excel exports to track violations. But these quickly fall out of sync with what’s happening in the cluster or Git. Hira is where real work happens, and that’s where Nirmata Control Hub (NCH) now meets your team. From any Policy Reports page, users can instantly generate a Jira issue for violations. Simply click “Create Jira Issue” and fill in the ticket details, such as project, title, issue type, priority, and assignee. This creates traceability right at the source of the ossie, whether it;s a misconfigured deployment, a missing securityContext, or a policy deviation.</description></item><item><title>Why Policy as Code is a Game Changer for Platform Engineers</title><link>https://kubermates.org/docs/2025-05-13-why-policy-as-code-is-a-game-changer-for-platform-engineers/</link><pubDate>Tue, 13 May 2025 20:07:21 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-13-why-policy-as-code-is-a-game-changer-for-platform-engineers/</guid><description>Platform engineers, let’s talk about a fundamental shift that’s revolutionizing how we build and manage internal developer platforms: Policy as Code (PaC). This isn’t just another buzzword; it’s the key to creating scalable, secure, and efficient operations that empower developers. Let’s dive in! Platform engineers, let’s talk about a fundamental shift that’s revolutionizing how we build and manage internal developer platforms: Policy as Code (PaC). This isn’t just another buzzword; it’s the key to creating scalable, secure, and efficient operations that empower developers. Let’s dive in! Policy as Code drastically improves developer experience. By implementing policy checks early in the development process (“shifting left”), developers get instant feedback on potential issues. This prevents problems from reaching production and reduces mental load, allowing them to focus on innovation, not compliance headaches. Platform engineering is about giving developers self-service capabilities. Infrastructure as Code (IaC) provides automation, but Policy as Code (PaC) provides the critical guardrails. Developers can provision resources and deploy applications within defined “golden paths,” ensuring agility without compromising security or compliance. Policies written as code are stored in version control, creating a clear history of changes. This auditability is essential for troubleshooting and demonstrating compliance.</description></item><item><title>Nirmata’s AI-Powered Remediations: A Smarter Way to Fix Policy Violations</title><link>https://kubermates.org/docs/2025-05-06-nirmata-s-ai-powered-remediations-a-smarter-way-to-fix-policy-violations/</link><pubDate>Tue, 06 May 2025 18:25:24 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-06-nirmata-s-ai-powered-remediations-a-smarter-way-to-fix-policy-violations/</guid><description>Every modern enterprise strives for faster software delivery without compromising on security and compliance. As cloud-native environments grow in scale and complexity, so does the burden of identifying and fixing misconfigurations across clusters, pipelines, and cloud infrastructure. Today, we’re excited to announce a major leap forward in our mission to simplify cloud governance: AI-Powered Remediations , which is now available in preview in Nirmata Control Hub (NCH). Security and platform teams often face a growing backlog of policy violations—from missing labels to insecure container configurations to overly permissive network rules. Manually investigating each violation, understanding its root cause, and crafting a compliant fix takes time—and that time adds up. With AI Remediations, we’re dramatically reducing the Mean Time to Remediation (MTTR ). Instead of spending hours chasing down documentation or writing YAML from scratch, teams can now review and apply context-aware fixes in minutes. And the benefits go beyond speed: Whether it’s a Deployment, ConfigMap, NetworkPolicy, or any Kubernetes resource, if it violates a rule enforced by your Kyverno policies in NCH, we can generate a fix. Here’s how: Transparency by design: We don’t just tell you what to change – we explain why. You stay in control, with the ability to test and validate before deployment. AI Remediations aren’t about removing humans from the loop—they’re about giving your teams a smarter starting point. Think of them as policy-aware code suggestions that plug right into your existing workflows.</description></item><item><title>Nirmata Enterprise for Kyverno (N4K) Now Available on AWS Marketplace!</title><link>https://kubermates.org/docs/2025-05-05-nirmata-enterprise-for-kyverno-n4k-now-available-on-aws-marketplace/</link><pubDate>Mon, 05 May 2025 17:55:11 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-05-nirmata-enterprise-for-kyverno-n4k-now-available-on-aws-marketplace/</guid><description>We are thrilled to announce that Nirmata Enterprise for Kyverno (N4K) is now available on AWS Marketplace ! This enterprise-grade distribution of Kyverno brings the power of Kubernetes policy management with enhanced features, security, and support to meet the needs of the most demanding production environments. Nirmata Enterprise for Kyverno (N4K) is the enterprise-grade distribution of the widely-used Kyverno policy engine. N4K offers the same powerful policy enforcement capabilities as Kyverno but with key enhancements that cater to large-scale, security-conscious organizations. This includes zero CVEs , 24×7 support with SLA , and priority fixes and features to ensure your Kubernetes environments are always secure, compliant, and running at peak performance. By making Nirmata Enterprise for Kyverno (N4K) available on AWS Marketplace , we provide AWS customers with a streamlined way to purchase, deploy, and integrate Nirmata into their existing cloud-native environments. AWS Marketplace offers: Nirmata Enterprise for Kyverno (N4K) is available as a pay-as-you-go option through AWS Marketplace, making it flexible for businesses of all sizes. For organizations seeking annual or long-term contracts , we offer custom pricing options. Contact us directly for more information and to discuss a plan that fits your specific needs. Nirmata Enterprise for Kyverno (N4K) is available now on AWS Marketplace! Ready to elevate your Kubernetes security and governance? Visit the AWS Marketplace today to install the N4K add-on and discover how Nirmata can help you manage Kubernetes policy enforcement at scale. Read the complete documentation here. For more information or if you’re interested in annual or long-term contract options, contact us today. If you’d like to schedule a demo to see what all the buzz is about, you can do that here.</description></item></channel></rss>