<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Nirmata on Kubermates</title><link>https://kubermates.org/tags/nirmata/</link><description>Recent content in Nirmata on Kubermates</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 27 Oct 2025 16:17:44 +0000</lastBuildDate><atom:link href="https://kubermates.org/tags/nirmata/index.xml" rel="self" type="application/rss+xml"/><item><title>The Policy-as-Code AI Agent: Smarter Kubernetes Governance &amp; Security</title><link>https://kubermates.org/docs/2025-10-27-the-policy-as-code-ai-agent-smarter-kubernetes-governance-security/</link><pubDate>Mon, 27 Oct 2025 16:17:44 +0000</pubDate><guid>https://kubermates.org/docs/2025-10-27-the-policy-as-code-ai-agent-smarter-kubernetes-governance-security/</guid><description>The Policy-as-Code AI Agent: Smarter Kubernetes Governance &amp;amp; Security What is the Policy-as-Code Agent? Why the Policy-as-Code Agent Matters Your Personal Policy Assistant Key Outcomes Why Now Try the Policy-as-Code Agent Today Policies are the backbone of Kubernetes governance. They enforce security, compliance, and operational best practices. However, for most teams, policy authoring feels like a source of friction: endless YAML, fragmented documentation, and excessive trial-and-error. The Policy-as-Code (PaC) Agent changes that. Instead of wrestling with syntax, you describe your intent in plain English. The agent generates the right Kyverno policies, scaffolds matching test cases, and even prepares Git-ready outputs. It’s not about writing YAML faster – it’s about making governance effortless, scalable, and developer-friendly. The PaC Agent is an AI-powered assistant for authoring and governing Kubernetes policies. It helps teams translate natural language intent into validated, testable Kyverno policies , bridging the gap between developer velocity and security rigor. With the PaC Agent, anyone — from developers to platform engineers — can create, test, and package policies with confidence. Policies aren’t just a compliance exercise; they directly shape the developer experience. When governance is slow or inconsistent, it creates bottlenecks in the system.</description></item><item><title>AI-Driven Platform Governance: The Next Frontier for Engineering</title><link>https://kubermates.org/docs/2025-10-06-ai-driven-platform-governance-the-next-frontier-for-engineering/</link><pubDate>Mon, 06 Oct 2025 08:00:19 +0000</pubDate><guid>https://kubermates.org/docs/2025-10-06-ai-driven-platform-governance-the-next-frontier-for-engineering/</guid><description>AI-Driven Platform Governance: The Next Frontier for Engineering The New Governance Challenge What is AI-Driven Governance? Why Care? Why Now The Nirmata Value Looking Ahead Over the past decade, cloud-native technologies and Kubernetes have become the foundation for how enterprises build and run software. At the same time, artificial intelligence (AI) has catapulted from experimentation to mainstream adoption. This convergence is reshaping not only how applications are created but also how they are implemented, secured, and governed. As the creators of Kyverno , the leading open-source policy-as-code engine for Kubernetes, we’ve seen firsthand how organizations use policies to define intent, enforce standards, and manage risk. Kyverno excels at surfacing issues and helping teams understand where their guardrails may be failing. But detection alone isn’t enough. Teams are still left with the burden of figuring out how to remediate issues, apply fixes across environments, and maintain compliance at scale. This is why platform engineering has become both the bottleneck and the enabler of the AI future. Without scalable governance and guardrails, platform engineering slows down innovation. But with AI-driven governance and automated policy enforcement , platform engineering becomes the discipline that unlocks velocity, resilience, and trust—creating the foundation AI needs to thrive. The question is no longer IF we need governance, but how we can establish effective guardrails, controls, and compliance without slowing down innovation. That’s where AI-driven governance comes in.</description></item><item><title>Kyverno vs Kubernetes Policies: How It Complements and Completes</title><link>https://kubermates.org/docs/2025-10-01-kyverno-vs-kubernetes-policies-how-it-complements-and-completes/</link><pubDate>Wed, 01 Oct 2025 18:31:30 +0000</pubDate><guid>https://kubermates.org/docs/2025-10-01-kyverno-vs-kubernetes-policies-how-it-complements-and-completes/</guid><description>Kyverno vs Kubernetes Policies: How It Complements and Completes Do You Still Need Kyverno with Kubernetes Policies? Introduction 1. Applying Policies On Existing Resources 2. Reapplying Policies On Changes 3. Applying Policies Off Cluster (Shift-Left) 4. Testing Policy as Code 5. Reporting Policy Results 6. Managing Fine-Grained Policy Exceptions 7. Complex Policy Logic 8. Image Verification 9. Policy-Based Automation 10. Kyverno Everywhere Conclusion FAQ: Kyverno vs Kubernetes Policies What is the difference between Kyverno and Kubernetes policies? Can Kyverno replace Kubernetes ValidatingAdmissionPolicy? Why do I need Kyverno if Kubernetes already has policies? With the addition of ValidatingAdmissionPolicy and MutatingAdmissionPolicy in Kubernetes, do you still need Kyverno? Quick Answer: Yes, you still need Kyverno. Kubernetes policies (ValidatingAdmissionPolicy, MutatingAdmissionPolicy) handle admission checks, but Kyverno extends them with reporting, testing, automation, and policy management at scale.</description></item><item><title>Kyverno vs Kubernetes Policies: How Kyverno Complements and Completes Kubernetes Policy Types</title><link>https://kubermates.org/docs/2025-10-01-kyverno-vs-kubernetes-policies-how-kyverno-complements-and-completes-kubernetes-/</link><pubDate>Wed, 01 Oct 2025 18:31:30 +0000</pubDate><guid>https://kubermates.org/docs/2025-10-01-kyverno-vs-kubernetes-policies-how-kyverno-complements-and-completes-kubernetes-/</guid><description>Kyverno vs Kubernetes Policies: How Kyverno Complements and Completes Kubernetes Policy Types Do You Still Need Kyverno with the new Kubernetes Policy Types? Introduction 1. Applying Policies On Existing Resources 2. Reapplying Policies On Changes 3. Applying Policies Off Cluster (Shift-Left) 4. Testing Policy as Code 5. Reporting Policy Results 6. Managing Fine-Grained Policy Exceptions 7. Complex Policy Logic 8. Image Verification 9. Policy-Based Automation 10. Kyverno Everywhere Conclusion FAQ: Kyverno vs Kubernetes Policies What is the difference between Kyverno and Kubernetes policies? Can Kyverno replace Kubernetes ValidatingAdmissionPolicy? Why do I need Kyverno if Kubernetes already has policies? With the addition of ValidatingAdmissionPolicy and MutatingAdmissionPolicy in Kubernetes, do you still need Kyverno? TL;DR: Yes, you still need Kyverno for applying policies on existing resources, complex logic, reporting, testing, and off-cluster / shift-left use cases! Read on for details: Prior to Kyverno, policy management in Kubernetes was complex and cumbersome. While the need for Policy as Code was clear, initial implementations required learning complex languages and did not implement the full policy as code lifecycle.</description></item><item><title>From Chaos to Control: Achieving Network Policy Nirvana with Kyverno</title><link>https://kubermates.org/docs/2025-09-25-from-chaos-to-control-achieving-network-policy-nirvana-with-kyverno/</link><pubDate>Thu, 25 Sep 2025 08:00:55 +0000</pubDate><guid>https://kubermates.org/docs/2025-09-25-from-chaos-to-control-achieving-network-policy-nirvana-with-kyverno/</guid><description>From Chaos to Control: Achieving Network Policy Nirvana with Kyverno The Challenge: The Manual Toil of Network Policies The Solution: Kyverno for Guardrails and Automation Key Insights from the Live Demo Conclusion: Empowering Platform Teams At the recent Kubernetes Community Days (KCD) in San Francisco, Jim Bugwadia, co-founder of Nirmata and a maintainer of the CNCF project Kyverno, delivered a session on one of the most persistent challenges in platform engineering: the balancing act between developer agility and robust security. His talk, “Network Policy Nirvana,” provided a clear roadmap for taming the complexity of Kubernetes network security through automation and policy-as-code. Jim began by framing the core problem. Platform teams are constantly caught between two competing needs: Developers require self-service and agility to ship features quickly. Security and compliance teams require guardrails and control to protect the platform. Nowhere is this tension more apparent than with Kubernetes Network Policies. While essential for security, native Network Policies can be complex, error-prone, and difficult to manage at scale. By default, Kubernetes allows all pods to talk to each other, so securing a cluster requires a “deny-by-default” stance, which can be difficult to implement manually. This leads to several pain points: Complexity: Managing countless YAML files for different applications is prone to error. Lack of Automation: Manual policy review creates bottlenecks and slows down development. Security Gaps: Misconfigurations can easily lead to unintended security vulnerabilities. Jim introduced Kyverno , a policy engine built for Kubernetes, as the solution.</description></item><item><title>Securing Your Infrastructure as Code: The Power of Nirmata and HashiCorp Terraform</title><link>https://kubermates.org/docs/2025-09-23-securing-your-infrastructure-as-code-the-power-of-nirmata-and-hashicorp-terrafor/</link><pubDate>Tue, 23 Sep 2025 20:50:44 +0000</pubDate><guid>https://kubermates.org/docs/2025-09-23-securing-your-infrastructure-as-code-the-power-of-nirmata-and-hashicorp-terrafor/</guid><description>Securing Your Infrastructure as Code: The Power of Nirmata and HashiCorp Terraform HashiCorp Terraform: The Foundation of Your Infrastructure Nirmata: The Governance &amp;amp; Security Layer A Practical Synergy HashiCorp Terraform is synonymous with Infrastructure as Code (IaC) and is heavily used for infrastructure provisioning, but often, cloud resources are misconfigured. Also, with the rapid adoption of AI, more IaC is being generated using AI tools. The challenge is to identify misconfigurations early, ensuring that provisioned infrastructure is secure and reliable. At Nirmata, we believe that empowering developers with agile, self-service tools is crucial, but it must be done with guardrails in place. This is where the powerful combination of Nirmata and Terraform comes into play. While Terraform is the industry standard for declaring and provisioning infrastructure, Nirmata provides the essential governance, security, and lifecycle management for that infrastructure and the applications running on it. Terraform, as the leader in Infrastructure as Code (IaC), allows you to define your cloud and on-premises resources in a declarative, human-readable language. With a vast ecosystem of providers, including a Nirmata provider , you can use Terraform to provision everything from a simple virtual machine to a complex, multi-cluster Kubernetes environment on any cloud, like AWS, Azure, or Google Cloud Platform (GCP). The core benefit is clear: you manage your infrastructure in a predictable, repeatable, and version-controlled way. While Terraform is ideal for provisioning, it falls short in addressing the ongoing challenges of Day 2 operations, security, and governance. This is where Nirmata’s policy-based platform complements your Terraform workflows. Think of it this way: Terraform is your blueprint for provisioning infrastructure across any provider and any cloud.</description></item><item><title>A Blueprint for DevSecOps: Accelerating Federal Agencies with IBM and Nirmata</title><link>https://kubermates.org/docs/2025-09-11-a-blueprint-for-devsecops-accelerating-federal-agencies-with-ibm-and-nirmata/</link><pubDate>Thu, 11 Sep 2025 21:51:25 +0000</pubDate><guid>https://kubermates.org/docs/2025-09-11-a-blueprint-for-devsecops-accelerating-federal-agencies-with-ibm-and-nirmata/</guid><description>A Blueprint for DevSecOps: Accelerating Federal Agencies with IBM and Nirmata The Challenge: Navigating a Complex Landscape The Solution: The IBM PDE Factory The Power of Policy as Code A Cultural Shift: From Remediation to Creation In the rapidly evolving world of IT modernization, federal agencies face a unique set of challenges. They must navigate complex security mandates and legacy systems while striving for the agility and speed of modern software development. A recent webinar featuring experts from IBM Federal and Nirmata shed light on this very topic, offering a compelling vision for accelerating DevSecOps and ensuring security is a foundational element, not an afterthought. A poll conducted during the webinar revealed the top hurdles for federal agencies: a tie between manual processes and legacy systems and security and compliance mandates. This perfectly illustrates the central conflict. How do you move fast when everything is a manual, security-audited process? As Mark Wells, DevSecOps and IT Automation Practice Lead for IBM Federal, explained, this was the exact problem that led to the creation of the IBM PTE Factory. Born from the chaos of DevOps engineers “running around like chickens with their heads cut off,” the factory was designed to automate the deployment of infrastructure and development environments. The IBM PDE Factory is an asset—a platform and product engineering tool designed to deliver core services and support for software engineering. It’s built around a “start left” philosophy, meaning security is integrated from the very beginning of the process, not “shifted left” later. The factory’s core is a series of “builders” that automate critical tasks: Resource Builder: Ensures all container images and resources are certified and attested to, with near-zero vulnerabilities, before they are ever used. Platform Builder: Automates the creation of the entire cloud architecture. Security Builder: Deploys pre-configured bundles of security policies.</description></item><item><title>Honoring Styra’s Contributions To OPA</title><link>https://kubermates.org/docs/2025-08-20-honoring-styra-s-contributions-to-opa/</link><pubDate>Wed, 20 Aug 2025 23:03:50 +0000</pubDate><guid>https://kubermates.org/docs/2025-08-20-honoring-styra-s-contributions-to-opa/</guid><description>Honoring Styra’s Contributions To OPA As the creator of Open Policy Agent (OPA), Styra has played an extraordinary role in shaping the Policy as Code (PaC) movement and advancing cloud-native security and governance. This week, the founders and core team behind Styra announced that they are joining Apple. I first met the Styra team at KubeCon 2017 in Austin, when Brian Grant saw an early demo of what we were building, and suggested that I talk to them. Although we have significantly different approaches to PaC, one of my favorite moments at each KubeCon since has been catching up with folks from Styra and exchanging notes on the space. We here at Nirmata, want to take a moment to recognize and thank the entire Styra team – their founders Teemu, Tim, Torin, along with Anders, Charlie and many others – for their pioneering work. Without their vision and drive, there would be no PaC ecosystem as we know it today. At Nirmata, we know that Kyverno’s journey, and our own, would not have been possible without the foundation laid by the OPA community. The early adoption of OPA proved the need for declarative policies and automated governance. It set the standard for how organizations think about declarative policies across cloud and infrastructure environments and it will continue to play an important role in the CNCF landscape. We are also encouraged that the Styra team has found a great home at Apple. With such a strong technology leader supporting them, the OPA community can look forward to ongoing innovation, stability, and new opportunities for growth. We are excited to see what comes next in the OPA roadmap and how the project continues to evolve as a critical part of the cloud native landscape.</description></item><item><title>Nirmata Teams Dashboard Gets a Makeover: A Cleaner, Smarter Experience for Managing Kubernetes and Cloud Environments</title><link>https://kubermates.org/docs/2025-07-15-nirmata-teams-dashboard-gets-a-makeover-a-cleaner-smarter-experience-for-managin/</link><pubDate>Tue, 15 Jul 2025 08:00:09 +0000</pubDate><guid>https://kubermates.org/docs/2025-07-15-nirmata-teams-dashboard-gets-a-makeover-a-cleaner-smarter-experience-for-managin/</guid><description>Nirmata Teams Dashboard Gets a Makeover: A Cleaner, Smarter Experience for Managing Kubernetes and Cloud Environments What’s New in the Teams Dashboard? Redesigned Team Cards Better Visibility Into Policy Assignments Pagination for Better Performance Redesigned Team Details Page Major UI Cleanup New Tabbed Layout Smarter Member Management Why It Matters We’re excited to announce a refreshed Teams Dashboard in Nirmata Control Hub. This redesign delivers a cleaner, more intuitive interface that not only looks better, it works better too. Whether you’re managing a few teams or dozens, the new dashboard streamlines how you view and interact with team-related data across your Kubernetes and cloud environments. To improve visibility and team-level accountability, the dashboard now shows how infrastructure resources are allocated across teams. You can easily see which Kubernetes clusters, namespaces, and repositories belong to each team – such as Security, Platform, or Development – and who the team members are. This makes it simpler to understand team footprints, manage access, and align infrastructure usage with organizational structure. Team cards have been completely redesigned with a cleaner layout that makes key information immediately visible. Each card now includes: Total Members in the team Total Clusters assigned Total Namespaces assigned Total Repositories assigned This update gives you a high-level snapshot of your teams’ footprint across your infrastructure , helping you stay informed at a glance. We’ve improved how policy report assignments are surfaced on each team card, offering better visibility and preparing the groundwork for even more powerful insights and statistics in future releases. Instead of listing all teams on one long scroll, we now paginate the dashboard. You’ll see 12 teams at a time, making navigation faster and more manageable, especially for larger organizations. We’ve also made significant improvements to the Team Details page, focusing on clarity and ease of use.</description></item><item><title>Kubernetes Governance with Nirmata &amp; SUSE</title><link>https://kubermates.org/docs/2025-07-14-kubernetes-governance-with-nirmata-suse/</link><pubDate>Mon, 14 Jul 2025 08:05:54 +0000</pubDate><guid>https://kubermates.org/docs/2025-07-14-kubernetes-governance-with-nirmata-suse/</guid><description>Kubernetes Governance with Nirmata &amp;amp; SUSE Seamless Integration with Rancher Manager Here’s how to find it: Why This Partnership Matters for You Happy Monday, cloud-native enthusiasts! We’re thrilled to share some exciting news that marks a significant milestone for Nirmata and the broader Kubernetes community. We are proud to announce that Nirmata is now officially approved and listed in the SUSE Partner Certification &amp;amp; Solutions Catalog! This achievement isn’t just a badge; it’s a testament to our commitment to providing robust, integrated solutions that simplify Kubernetes governance and management to enhance security for enterprises. For users of SUSE and Rancher, this partnership opens up new avenues for streamlined operations and greater control over their cloud-native environments. One of the most immediate benefits of this partnership is the seamless availability of Nirmata within the Rancher ecosystem. You can now easily access Nirmata directly from your Rancher Manager interface. Navigate to Apps → Charts within your Rancher Manager, and you’ll find Nirmata listed in the Rancher Partner Catalog. This direct integration makes it incredibly easy for Rancher users to discover, deploy, and leverage Nirmata’s capabilities for Kubernetes governance, policy management, governance, and security. This collaboration between Nirmata and SUSE/Rancher brings together two powerful platforms to address critical needs in the cloud-native landscape: Enhanced K8s Governance and Security: Nirmata provides a comprehensive policy engine that allows organizations to define, enforce, and audit policies across their Kubernetes clusters. This is crucial for maintaining security posture, ensuring compliance, and enforcing operational best practices, especially in multi-cluster and hybrid cloud environments managed by Rancher. Simplified Operations: By integrating with Rancher Manager, Nirmata makes it even easier for platform teams to gain visibility and control over their Kubernetes deployments. From admission control to runtime security, Nirmata streamlines complex tasks , allowing teams to focus on innovation rather than operational overhead. Accelerated Adoption: For enterprises already invested in the SUSE/Rancher ecosystem, this partnership means they can confidently extend their capabilities with Nirmata, knowing that the solutions are certified, integrated, and designed to work together seamlessly.</description></item><item><title>Is Your Kyverno Healthy? Now You Can Know for Sure.</title><link>https://kubermates.org/docs/2025-06-30-is-your-kyverno-healthy-now-you-can-know-for-sure/</link><pubDate>Mon, 30 Jun 2025 08:00:13 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-30-is-your-kyverno-healthy-now-you-can-know-for-sure/</guid><description>Is Your Kyverno Healthy? Now You Can Know for Sure. Why Kyverno Health Matters What’s New: Kyverno Health Check Real Example: NetworkPolicy for Kyverno Getting Started Why Kyverno Health Check Matters Running Kyverno is essential for enforcing Kubernetes governance and security policies. But is your Kyverno setup secure, scalable, and resilient? With the latest enhancement in Nirmata Control Hub , you no longer have to guess. We’re excited to introduce the Kyverno Health Check – a new capability that provides a clear, actionable view of Kyverno’s configuration in your clusters. Whether you’re a platform engineer managing dozens of clusters or a security lead enforcing policy compliance, this feature helps to ensure that Kyverno is running optimally at all times. Kyverno by Nirmata enforces critical security, compliance, and operational policies in Kubernetes. But like any controller, its effectiveness depends on its own configuration and health. A misconfigured or unhealthy Kyverno deployment can : Allow lateral network traffic to Kyverno pods. Fail under load due to insufficient resource settings Go unnoticed during outages due to missing observability. Or worse, be vulnerable to privilege escalation or unauthorized cluster-admin bindings Kyverno Health Check ensures none of this happens by continuously and vigilantly evaluating your deployments for best practices and known risks. The new Kyverno Health Check feature in Nirmata Control Hub evaluates Kyverno deployments based on four critical categories: Security Detects wildcard permissions, cluster-admin bindings, and missing NetworkPolicies Detects wildcard permissions, cluster-admin bindings, and missing NetworkPolicies Availability Checks for resource configurations, pod disruption budgets, and runtime stability of Kyverno. Checks for resource configurations, pod disruption budgets, and runtime stability of Kyverno.</description></item><item><title>Cut Through the DevSecOps Noise: Smart Violation Prioritization in Nirmata Control Hub</title><link>https://kubermates.org/docs/2025-06-27-cut-through-the-devsecops-noise-smart-violation-prioritization-in-nirmata-contro/</link><pubDate>Fri, 27 Jun 2025 14:54:55 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-27-cut-through-the-devsecops-noise-smart-violation-prioritization-in-nirmata-contro/</guid><description>Cut Through the DevSecOps Noise: Smart Violation Prioritization in Nirmata Control Hub A TL;DR for Your K8s Cluster’s Health What to Fix First – and Why How to Fix It: In-Line Remediation Guidance Tie It All Together with Jira Integration Get One Step Closer to a Secure, Governed K8s Cluster When managing security and compliance in Kubernetes, it’s easy to get overwhelmed. As a platform engineer or administrator, you might look at your cluster or namespace and find hundreds or even thousands of violations. But not all violations are created equal. Some are critical security risks that demand immediate attention, while others are best practices that can be addressed later. The problem? Without clear guidance, most teams end up doing nothing. Not because they don’t care – but because they don’t know where to start. That’s exactly the problem we solve with Violation Summarization and Prioritization in Nirmata Control Hub. With Nirmata Control Hub, you don’t have to dig through pages of findings and all the time spent therein. With a timely glance, you get a summary report for your entire cluster or specific namespaces, showing: Total number of violations Affected namespaces Top security risks Recommended actions Nirmata Control Hub won’t just tell you what’s wrong. We prioritize violations into clear buckets: 🔥 Priority 1: Immediate Attention High-impact misconfigurations that expose your workloads to real risk – fix these ASAP. 🚨 Priority 2: Important but Not Urgent Still important, but can be queued up for your next sprint. ℹ️ Priority 3: Minor / Best Practices Clean-up tasks and optimizations – ideal for long-term hygiene.</description></item><item><title>Leveling Up Policy Enforcement in Kubernetes: A Look at Kyverno 1.14 and CEL</title><link>https://kubermates.org/docs/2025-05-29-leveling-up-policy-enforcement-in-kubernetes-a-look-at-kyverno-1-14-and-cel/</link><pubDate>Thu, 29 May 2025 17:37:06 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-29-leveling-up-policy-enforcement-in-kubernetes-a-look-at-kyverno-1-14-and-cel/</guid><description>Leveling Up Policy Enforcement in Kubernetes: A Look at Kyverno 1.14 and CEL What is Kyverno? Evolving Challenges and the Rise of CEL Introducing New Policy Types in Kyverno 1.14 Validating Policy Image Validating Policy Future Directions Kyverno’s Strengths Recently, Cloud Native Live featured a session diving into the powerful integration of Common Expression Language (CEL) in Kyverno 1.14. Hosted by Eric Durmishi and presented by Kyverno maintainers Mariam Fahmy and Charles Edward, the session introduced exciting new capabilities that enhance Kyverno’s flexibility and consistency as a policy engine for Kubernetes. At its core, Kyverno is a policy engine for Kubernetes. It enables you to define policies for validating, mutating, generating, or verifying images for resources within your cluster. When an API request, like creating a Pod, is sent to the Kubernetes API server, it passes through several stages, including authentication and authorization. Kyverno integrates as an admission webhook. The API request is forwarded to the Kyverno server, which fetches relevant policies, applies them to the resource, and then either accepts or rejects the request based on whether the resource violates the policy. Kyverno also includes components such as the Reports Controller, which generates policy reports to visualize policy results, and a Cleanup Controller, which manages unused resources based on cleanup policies. Traditionally, Kyverno used a single policy type with different rule types nested within it, such as validate, mutate, generate, and verifyImages. Policies could define rules to match or exclude specific resources. For validation, you could use patterns, deny rules, Pod Security subrules, or assertion trees. If a resource violated a policy, Kyverno’s action was determined by the failureAction field, which could be set to enforce (reject the request) or audit (allow the request, generating a warning and a policy report).</description></item><item><title>Automate Policy Violation Tracking with Jira in Nirmata Control Hub</title><link>https://kubermates.org/docs/2025-05-14-automate-policy-violation-tracking-with-jira-in-nirmata-control-hub/</link><pubDate>Wed, 14 May 2025 10:08:17 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-14-automate-policy-violation-tracking-with-jira-in-nirmata-control-hub/</guid><description>Automate Policy Violation Tracking with Jira in Nirmata Control Hub Why This Matters How It Works Manual Ticket Creation Where It Matters Automate What Should Be Automated The Real Value: Moving from Visibility to Action Try It Out Today Keeping track of Kubernetes policy violations across namespaces and clusters can be tedious, especially when teams rely on disconnected tools and manual workflows. With Nirmata Control Hub’s Jira integration, you can automatically or manually create Jira tickets for policy violations directly from the platform. This ensures accountability, reduces MTTR (mean time to resolution), and improves team productivity by embedding policy compliance into your teams’ tools. Every misconfiguration or policy violation is a potential security or compliance risk. However, identifying issues is only the first step. The real value is in closing the loop—from detection to resolution. Traditionally, teams rely on Slack alerts, dashboards, or Excel exports to track violations. But these quickly fall out of sync with what’s happening in the cluster or Git. Hira is where real work happens, and that’s where Nirmata Control Hub (NCH) now meets your team. From any Policy Reports page, users can instantly generate a Jira issue for violations. Simply click “Create Jira Issue” and fill in the ticket details, such as project, title, issue type, priority, and assignee. This creates traceability right at the source of the ossie, whether it;s a misconfigured deployment, a missing securityContext, or a policy deviation.</description></item><item><title>Why Policy as Code is a Game Changer for Platform Engineers</title><link>https://kubermates.org/docs/2025-05-13-why-policy-as-code-is-a-game-changer-for-platform-engineers/</link><pubDate>Tue, 13 May 2025 20:07:21 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-13-why-policy-as-code-is-a-game-changer-for-platform-engineers/</guid><description>Why Policy as Code is a Game Changer for Platform Engineers Empower Developers with Faster Feedback Enable Secure Self-Service Achieve Unprecedented Transparency Boost Efficiency and Scalability Ensure Consistent and Standardized Environments Automate Governance and Security Fortify Your Security Posture Streamline Compliance Effortlessly The Future of Platforms is Policy as Code Explore More About Platform Engineering Trends and Best Practices Platform engineers, let’s talk about a fundamental shift that’s revolutionizing how we build and manage internal developer platforms: Policy as Code (PaC). This isn’t just another buzzword; it’s the key to creating scalable, secure, and efficient operations that empower developers. Let’s dive in! Platform engineers, let’s talk about a fundamental shift that’s revolutionizing how we build and manage internal developer platforms: Policy as Code (PaC). This isn’t just another buzzword; it’s the key to creating scalable, secure, and efficient operations that empower developers. Let’s dive in! Policy as Code drastically improves developer experience. By implementing policy checks early in the development process (“shifting left”), developers get instant feedback on potential issues. This prevents problems from reaching production and reduces mental load, allowing them to focus on innovation, not compliance headaches. Platform engineering is about giving developers self-service capabilities. Infrastructure as Code (IaC) provides automation, but Policy as Code (PaC) provides the critical guardrails. Developers can provision resources and deploy applications within defined “golden paths,” ensuring agility without compromising security or compliance. Policies written as code are stored in version control, creating a clear history of changes. This auditability is essential for troubleshooting and demonstrating compliance.</description></item><item><title>Nirmata’s AI-Powered Remediations: A Smarter Way to Fix Policy Violations</title><link>https://kubermates.org/docs/2025-05-06-nirmata-s-ai-powered-remediations-a-smarter-way-to-fix-policy-violations/</link><pubDate>Tue, 06 May 2025 18:25:24 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-06-nirmata-s-ai-powered-remediations-a-smarter-way-to-fix-policy-violations/</guid><description>Nirmata’s AI-Powered Remediations: A Smarter Way to Fix Policy Violations Why AI Remediations for Policy as Code? How It Works Designed for Developer Velocity and Platform Efficiency Where to Find It What’s Next Every modern enterprise strives for faster software delivery without compromising on security and compliance. As cloud-native environments grow in scale and complexity, so does the burden of identifying and fixing misconfigurations across clusters, pipelines, and cloud infrastructure. Today, we’re excited to announce a major leap forward in our mission to simplify cloud governance: AI-Powered Remediations , which is now available in preview in Nirmata Control Hub (NCH). Security and platform teams often face a growing backlog of policy violations—from missing labels to insecure container configurations to overly permissive network rules. Manually investigating each violation, understanding its root cause, and crafting a compliant fix takes time—and that time adds up. With AI Remediations, we’re dramatically reducing the Mean Time to Remediation (MTTR ). Instead of spending hours chasing down documentation or writing YAML from scratch, teams can now review and apply context-aware fixes in minutes. And the benefits go beyond speed: Dev teams are no longer blocked by vague policy errors. Instead, they receive concrete, explainable suggestions to fix issues early. Platform engineers can spend less time triaging violations and more time building scalable, reliable infrastructure. Security teams have peace of mind knowing issues aren’t just detected—they’re getting resolved faster than ever. Whether it’s a Deployment, ConfigMap, NetworkPolicy, or any Kubernetes resource, if it violates a rule enforced by your Kyverno policies in NCH, we can generate a fix.</description></item><item><title>Nirmata Enterprise for Kyverno (N4K) Now Available on AWS Marketplace!</title><link>https://kubermates.org/docs/2025-05-05-nirmata-enterprise-for-kyverno-n4k-now-available-on-aws-marketplace/</link><pubDate>Mon, 05 May 2025 17:55:11 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-05-nirmata-enterprise-for-kyverno-n4k-now-available-on-aws-marketplace/</guid><description>Nirmata Enterprise for Kyverno (N4K) Now Available on AWS Marketplace! What is Nirmata Enterprise for Kyverno (N4K)? Key Features of Nirmata Enterprise for Kyverno Why Choose Nirmata Enterprise for Kyverno? Why AWS Marketplace? Flexible Payment Options Get Started Today We are thrilled to announce that Nirmata Enterprise for Kyverno (N4K) is now available on AWS Marketplace ! This enterprise-grade distribution of Kyverno brings the power of Kubernetes policy management with enhanced features, security, and support to meet the needs of the most demanding production environments. Nirmata Enterprise for Kyverno (N4K) is the enterprise-grade distribution of the widely-used Kyverno policy engine. N4K offers the same powerful policy enforcement capabilities as Kyverno but with key enhancements that cater to large-scale, security-conscious organizations. This includes zero CVEs , 24×7 support with SLA , and priority fixes and features to ensure your Kubernetes environments are always secure, compliant, and running at peak performance. Zero CVEs : N4K provides a CVE-free experience , ensuring that your Kubernetes clusters remain secure with a distribution that is continuously updated and maintained. Our enterprise offering is fully vetted for vulnerabilities, so you can trust that your workloads are protected. 24×7 Support with SLA : With N4K, you get the peace of mind that comes with round-the-clock, enterprise-grade support. Our SLA ensures fast response times and access to expert assistance whenever you need it, helping your team stay productive and your environment secure. Priority Fixes and Features : As an N4K customer, you gain access to priority bug fixes , security patches , and new features. Your business will always be the first to benefit from updates that improve performance, security, and usability. Scalability at Enterprise Scale : Built to support large enterprises, N4K offers high-performance policy enforcement , enabling organizations to govern hundreds or even thousands of Kubernetes clusters efficiently while maintaining consistency across their entire environment. NCTL – CI Pipeline Integration : With NCTL , users can integrate security scanning directly into their CI pipelines.</description></item></channel></rss>