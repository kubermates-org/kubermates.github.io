<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kodekloud on Kubermates</title><link>https://kubermates.org/tags/kodekloud/</link><description>Recent content in Kodekloud on Kubermates</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 15 Aug 2025 07:29:57 +0000</lastBuildDate><atom:link href="https://kubermates.org/tags/kodekloud/index.xml" rel="self" type="application/rss+xml"/><item><title>Why KubeCon India 2025 Meant More to KodeKloud</title><link>https://kubermates.org/docs/2025-08-15-why-kubecon-india-2025-meant-more-to-kodekloud/</link><pubDate>Fri, 15 Aug 2025 07:29:57 +0000</pubDate><guid>https://kubermates.org/docs/2025-08-15-why-kubecon-india-2025-meant-more-to-kodekloud/</guid><description>That big queue at your booth? Brilliant. It’s exactly what KodeKloud is about. When attendees, speakers, and industry peers tell you that at KubeCon India, it’s a clear sign that what KodeKloud is doing is making a real impact. For KodeKloud, KubeCon India 2025 was more than a tech conference. It was a celebration of community, connection, and the power of practical learning in the Cloud Native space. From conversations with global leaders to meeting hundreds of learners face-to-face, this year meant more than ever before. One of the proudest moments for us at KubeCon India 2025 was standing alongside the Cloud Native Computing Foundation (CNCF) and the Linux Foundation Education team to announce a new initiative tailored specifically for learners in India. This partnership is designed to make Cloud Native certifications more accessible, affordable, and achievable in the region through: KodeKloud – Linux Foundation Partnership for Localized Certification Payment Click to learn more and explore our partnership → For us at KodeKloud, this is about much more than payments - it’s about removing barriers that keep talented engineers from reaching their potential. India is home to some of the most passionate DevOps and Cloud Native professionals in the world, and now, more of them will have a clear, affordable pathway to earning globally recognized certifications. The announcement was made live at KubeCon, with CNCF and Linux Foundation leaders sharing the stage - a powerful reminder that when communities and education providers work together, opportunities multiply. One of the standout moments was when Mumshad Mannambeth , KodeKloud’s founder, met Chris Aniszczyk , the CTO of the Cloud Native Computing Foundation (CNCF). Their conversation touched on: It was a meeting of minds that reflected exactly what KubeCon stands for - collaboration, knowledge-sharing, and driving the industry forward together.</description></item><item><title>From CFP to Stage: Win Your Tech Talk Slot</title><link>https://kubermates.org/docs/2025-07-22-from-cfp-to-stage-win-your-tech-talk-slot/</link><pubDate>Tue, 22 Jul 2025 06:19:59 +0000</pubDate><guid>https://kubermates.org/docs/2025-07-22-from-cfp-to-stage-win-your-tech-talk-slot/</guid><description>You’ve devoted hours into a project, discovered something incredible, and decided you want to share it with the world. You find the perfect conference, open the Call for Proposals (CFP) form, and pour your heart into it. You hit &amp;ldquo;submit. &amp;quot; And then you wait… That rejection email always stings. We’ve all been there. But what if you could change the odds? What if you could move from hoping your talk gets chosen to expecting it? After speaking at numerous global conferences and analyzing hundreds of accepted and rejected talks, I’ve found that a winning proposal isn’t about luck. It’s about strategy. This guide will break down that strategy, making it applicable for any tech event, from a local Google Community Day to the global stages of KubeCon or a Linux Foundation Summit. Before you write a single word of your abstract, you need to pick the right topic. The best topics sit at the intersection of three things: Your title is the first - and sometimes only - thing a reviewer reads. It needs to be a powerful hook. This is where you sell the story you hinted at in your title.</description></item><item><title>What Is Kubernetes? Finally, a Simple Explanation!</title><link>https://kubermates.org/docs/2025-07-15-what-is-kubernetes-finally-a-simple-explanation/</link><pubDate>Tue, 15 Jul 2025 05:26:35 +0000</pubDate><guid>https://kubermates.org/docs/2025-07-15-what-is-kubernetes-finally-a-simple-explanation/</guid><description>If you&amp;rsquo;ve googled for &amp;ldquo;What Is Kubernetes?&amp;rdquo; you probably got the usual: Well, you&amp;rsquo;re about to read something different. Finally, a blog that will explain &amp;ldquo;What is Kubernetes?&amp;rdquo; in very simple words ; an explanation for normal human beings. But Kubernetes is a solution to a problem. And to understand the solution, you first have to look at the problem it solves. Containers, containers, containers… in the voice of Steve Ballmer. You probably heard about Docker. But even if you didn&amp;rsquo;t, it&amp;rsquo;s no big deal to understand it. Docker is a set of tools that allow you to create, edit, and run containers. And a container is just an application in a small little box. What&amp;rsquo;s so cool about containers? Well, one thing is that the application has all that it needs (the so-called dependencies ) inside that little box. So you can take that container, run it on Windows, MacOS, Linux, whatever. It won&amp;rsquo;t complain that stuff is missing.</description></item><item><title>Quick Fixes for Common Kubernetes Issues</title><link>https://kubermates.org/docs/2025-07-06-quick-fixes-for-common-kubernetes-issues/</link><pubDate>Sun, 06 Jul 2025 18:26:31 +0000</pubDate><guid>https://kubermates.org/docs/2025-07-06-quick-fixes-for-common-kubernetes-issues/</guid><description>If you’ve ever used Kubernetes in a real-world project, you&amp;rsquo;ve probably hit an error that made no sense at first glance — a Pod stuck restarting, a Service not routing traffic, or your app mysteriously vanishing from the internet. The good news? You’re not alone. This guide walks you through the most common Kubernetes problems developers and DevOps teams face — and more importantly, how to fix them quickly. Whether you&amp;rsquo;re new to Kubernetes or scaling your first production app, consider this your essential cheat sheet. Symptoms: Your Pod starts, crashes, restarts, and repeats the loop. Why it happens: How to fix it: Pro Tip: If your app needs time to boot, adjust initialDelaySeconds in your probe. Symptoms: Your Pod stays in Pending status forever. Why it happens: How to fix it: Look for reasons like Insufficient CPU. Symptoms: You created a Service, but can’t reach your app. Why it happens: How to fix it: If it shows &lt;none> , your Service isn’t routing to any Pods. Symptoms: Pod never gets created due to image pulling failure. Why it happens: How to fix it: Then reference it in your Pod spec.</description></item><item><title>The Definitive Guide to Microservices</title><link>https://kubermates.org/docs/2025-06-16-the-definitive-guide-to-microservices/</link><pubDate>Mon, 16 Jun 2025 04:23:11 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-16-the-definitive-guide-to-microservices/</guid><description>Microservices are a way to design applications as a collection of small, independent services, each focusing on specific business functions. They ensure scalability, flexibility, and ease of maintenance by allowing individual services to operate and be updated autonomously. In this guide, we will break down what microservices are, how they operate, their advantages, key components, and best practices, offering a comprehensive overview for anyone looking to understand this modern architectural approach. Microservices are an architectural style that organizes an application as a collection of small, independently deployable services. Unlike traditional monolithic architectures, where a single service encapsulates all functionalities, microservices based applications break down applications into individual services, each focusing on a specific business capability. This modularity allows for independent deployment and scaling, making microservice architecture a popular choice for modern applications, particularly when considering internal microservices. One of the key characteristics of microservices is their cloud-native approach. Each service operates independently but is part of a larger application framework, often utilizing cloud resources to ensure scalability and fault tolerance. This approach not only enhances the flexibility of the system but also promotes the use of a diverse technology stack for different services, allowing teams to choose the best tools for each specific function, including individual microservices. Microservices are designed around bounded contexts, where a consistent domain model applies to a specific area of the application. This ensures that responsibilities are well defined, and each service can focus on a single function within the application. Small, cross-functional teams can manage and develop these services independently, fostering agility and rapid development cycles in a microservices architecture.</description></item><item><title>Kubernetes HPA: Mastering Horizontal Pod Autoscaler Basics and Best Practices</title><link>https://kubermates.org/docs/2025-06-15-kubernetes-hpa-mastering-horizontal-pod-autoscaler-basics-and-best-practices/</link><pubDate>Sun, 15 Jun 2025 04:51:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-15-kubernetes-hpa-mastering-horizontal-pod-autoscaler-basics-and-best-practices/</guid><description>Kubernetes Horizontal Pod Autoscaler (HPA) automatically adjusts the number of pod replicas in your Kubernetes cluster based on CPU or memory usage metrics. This capability ensures your application remains responsive and performs well under varying traffic loads. In this article, we will cover the basics of Kubernetes HPA, how it works, best practices, and a hands-on example to help you master this critical Kubernetes feature. At its core, the Kubernetes Horizontal Pod Autoscaler (HPA) is a Kubernetes resource that automatically adjusts the number of pod replicas based on observed CPU and memory usage metrics. This dynamic adjustment ensures your application maintains stable performance even as traffic fluctuates, making it a critical component for production workloads. Horizontal pod autoscaling HPA operates by continuously monitoring specified metrics and making scaling decisions to match the demand. The HPA utilizes resource metrics like CPU and memory, as well as custom metrics and cpu metrics, to determine the appropriate number of replicas needed. For example, if the average CPU utilization exceeds a predefined threshold, HPA will increase the number of replicas to distribute the load. Conversely, when the demand decreases, HPA reduces the number of replicas, optimizing resource usage and reducing costs. Additionally, the custom metrics api can be leveraged to enhance monitoring capabilities. This automatic scaling mechanism helps maintain application performance and reliability without manual intervention and automatically scales. Understanding how the Horizontal Pod Autoscaler (HPA) operates is crucial for leveraging its full potential.</description></item><item><title>kubectl logs: How to Get Pod Logs in Kubernetes (With Examples)</title><link>https://kubermates.org/docs/2025-06-14-kubectl-logs-how-to-get-pod-logs-in-kubernetes-with-examples/</link><pubDate>Sat, 14 Jun 2025 14:09:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-14-kubectl-logs-how-to-get-pod-logs-in-kubernetes-with-examples/</guid><description>Kubernetes is a container orchestration tool used to deploy and manage containerized applications. Like any software, these applications can sometimes fail or not perform as expected due to various reasons. When such failures occur, it’s important to identify and rectify the issue quickly. One key aspect of troubleshooting involves analyzing the application logs, which can provide valuable information about the root cause of the problem. Logs are essentially records of events happening within your application. By examining these logs, we can often gain insights into what went wrong. In this blog post, we’ll learn how to access Pod logs in Kubernetes using the kubectl logs command. Note that when we say Pod logs, we’re generally referring to the logs of the applications running in containers inside the Pod. To easily follow along with the examples in this post, we recommend using KodeKloud’s Kubernetes playground. This playground will provide you instant access to a running Kubernetes cluster with kubectl already installed. No need for you to install any software. With just one click, you&amp;rsquo;ll be ready to run the example code snippets and start experimenting right away.</description></item><item><title>K3s vs K8s: What are the Differences &amp; Use Cases</title><link>https://kubermates.org/docs/2025-06-10-k3s-vs-k8s-what-are-the-differences-use-cases/</link><pubDate>Tue, 10 Jun 2025 07:48:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-10-k3s-vs-k8s-what-are-the-differences-use-cases/</guid><description>When it comes to container orchestration, K8s (Kubernetes) has become a de facto standard for managing applications and infrastructure at scale across on-premise data centres and public clouds. But as organizations look to deploy containerized workloads to devices at the edge of their network or for Internet of Things (IoT) applications, the full Kubernetes distribution can be overkill. This is where K3s comes in. Developed by Rancher Labs, K3s is a lightweight Kubernetes distribution designed specifically for resource-constrained edge and IoT environments. In this article, we&amp;rsquo;ll explain the key differences between K3s and the upstream Kubernetes project to help you understand when each makes the most sense for your application architecture and deployment needs. Try the Kubernetes Deployments Lab for free. Kubernetes is an open-source container orchestration platform that automates the deployment, scaling, and management of containerized applications. It allows you to define your application&amp;rsquo;s desired state and ensures that it runs consistently in a cluster of machines. Kubernetes automates tasks such as load balancing, self-healing, and scaling, making it easier to manage and maintain container-based applications. It has become the industry standard for container orchestration, simplifying the management of complex, distributed applications. To learn more about how it works, check out this blog: Kubernetes Architecture Explained: Overview for DevOps Enthusiasts. At its core, K3s shares the same API and fundamental concepts as Kubernetes.</description></item><item><title>Should I Use Kubernetes?</title><link>https://kubermates.org/docs/2025-06-07-should-i-use-kubernetes/</link><pubDate>Sat, 07 Jun 2025 07:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-07-should-i-use-kubernetes/</guid><description>In the DevOps world, container orchestration is often synonymous with Kubernetes, a platform for deploying and managing container-based workloads in production. Since its debut in 2014, Kubernetes has seen a meteoric rise in its adoption and popularity. Despite being a relatively new technology, it is now used by a vast number of organizations, from small start-ups to large enterprises, so much so that it has become a standard in the industry. Kubernetes benefits from strong community support and boasts a rich ecosystem of tools and extensions. It is continuously being developed and improved, and judging by the current trends, Kubernetes is only going to get stronger in the future. In this blog post, we’ll discuss why you should consider using Kubernetes , scenarios where Kubernetes might not be the ideal solution, and explore some of its alternatives. Let’s get started! Kubernetes offers several key features that cater to a wide range of application deployment and management needs. Here are the top three features of Kubernetes that make it particularly suitable for modern software development: In recent years, the microservices approach ( where software systems are developed as a collection of small, independent services ) has become increasingly popular in software development. Kubernetes provides many abstractions and APIs that are particularly well-suited to the requirements and characteristics of a microservices architecture. Here&amp;rsquo;s how Kubernetes simplifies the deployment and management of microservices: One of the standout features of Kubernetes is its ability to auto-scale applications in response to fluctuating traffic demands. When production systems experience spikes or drops in traffic, Kubernetes seamlessly steps in to adjust resources. It achieves this through two key scaling strategies: In addition to horizontal and vertical scaling, Kubernetes excels in cloud-based scalability, using a feature known as the Cluster Autoscaler.</description></item><item><title>No More kubectl Commands — Just Talk to Your Kubernetes Cluster in Natural Language</title><link>https://kubermates.org/docs/2025-05-28-no-more-kubectl-commands-just-talk-to-your-kubernetes-cluster-in-natural-languag/</link><pubDate>Wed, 28 May 2025 17:52:01 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-28-no-more-kubectl-commands-just-talk-to-your-kubernetes-cluster-in-natural-languag/</guid><description>What if you could just ask: &amp;raquo;&amp;gt; how&amp;rsquo;s my nginx app doing? …and your terminal figured out the rest? Thanks to kubectl-ai , Kubernetes can now understand natural language. You type what you want in plain English, and it responds by executing real, context-aware kubectl commands — without needing to memorize flags, write YAML, or guess namespaces. Let’s explore how this works in action. Before you can chat with your cluster, make sure you have the basics in place: The fastest way (Linux &amp;amp; macOS): Skip the manual steps and install in one line: curl -sSL https://raw. githubusercontent. com/GoogleCloudPlatform/kubectl-ai/main/install. sh | bash You’ll be ready to talk to your cluster in under a minute. Prefer to do it yourself? Manual install (Linux, macOS, Windows): Already a kubectl power user? Install with Krew (Linux/macOS/Windows): If you use Krew (the plugin manager for kubectl), installation is a breeze: Now, just invoke it as a kubectl plugin: No matter which method you choose, you’ll be ready to type natural language commands and let kubectl-ai handle the rest. No more memorizing flags, no more YAML wrangling—just pure, conversational Kubernetes. Ready to see kubectl-ai in action? Now that setup is out of the way, it’s time to experience the magic of conversational Kubernetes firsthand. Let’s dive in: Instead of juggling flags and memorizing resource names, just type your question—kubectl-ai will handle the rest. Note: The following examples are run on a Windows system using the OpenAI GPT-4o model, but kubectl-ai works just as smoothly across platforms and with other LLM providers.</description></item><item><title>Do You Need a Degree to Be a DevOps Engineer? A 2025 Guide</title><link>https://kubermates.org/docs/2025-05-07-do-you-need-a-degree-to-be-a-devops-engineer-a-2025-guide/</link><pubDate>Wed, 07 May 2025 17:41:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-07-do-you-need-a-degree-to-be-a-devops-engineer-a-2025-guide/</guid><description>When you think of a DevOps Engineer, you might picture someone with a shiny Computer Science degree from a top-tier university. That was the old rulebook. In today’s cloud-powered, open-source-fueled, community-driven tech world… the rules have changed. 👉 The truth? A degree is nice to have, but it’s NOT a mandatory ticket to join the DevOps revolution. 👉 The better question: “Do you have the skills and mindset of a DevOps engineer?” Top companies (even tech giants) now hire for skills, not just degrees. They want someone who can: In short: They want a problem-solver. A degree shows you can learn. Hands-on skills show you can do. The second matters way more in DevOps. A degree CAN help you (but it’s optional). Most common degrees: A degree may: 👉 But it will NOT teach you DevOps “out-of-the-box”. You will still need to build those skills yourself.</description></item><item><title>Kubernetes 1.33: Top 5 Features of “Octarine</title><link>https://kubermates.org/docs/2025-05-05-kubernetes-1-33-top-5-features-of-octarine/</link><pubDate>Mon, 05 May 2025 17:20:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-05-kubernetes-1-33-top-5-features-of-octarine/</guid><description>The wait is over— Kubernetes 1. 33 has officially arrived, and it’s packed with magical new improvements for developers and operators alike. Code-named “Octarine” , a nod to the mythical “color of magic” from Terry Pratchett’s Discworld novels, this release continues Kubernetes’ steady momentum of delivering a scalable, secure, and developer-friendly container orchestration platform. According to the official Kubernetes announcement , Kubernetes 1. 33 is all about pushing boundaries while making life easier for everyone working with Kubernetes in production environments. Whether you’re running massive enterprise workloads or experimenting in a dev cluster, this version has something for you. Kubernetes 1. 33 includes a total of 64 enhancements , breaking down as follows: This broad set of updates signals ongoing investments across the project’s key pillars: performance, scalability, security, extensibility, and usability. With such a packed release, it’s easy to get lost in the full changelog. That’s why we’ve focused this overview on the five most important and popular features that developers and operators are most excited about. From long-awaited capabilities that boost cluster scaling and tighten security , to much-needed quality-of-life improvements for everyday Kubernetes usage, the Kubernetes 1. 33 “Octarine” release delivers on all fronts.</description></item><item><title>Day 7: Your Kubernetes Learning Roadmap — What’s Next After the Basics?</title><link>https://kubermates.org/docs/2025-05-03-day-7-your-kubernetes-learning-roadmap-what-s-next-after-the-basics/</link><pubDate>Sat, 03 May 2025 13:23:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-03-day-7-your-kubernetes-learning-roadmap-what-s-next-after-the-basics/</guid><description>You’ve made it through: You’ve just unlocked the foundation of Kubernetes. But Kubernetes is big. It’s normal to now think: This post will give you the answer. Here’s a simple path we recommend: What to learn next: Tools: 👉 KodeKloud Kubernetes Free Labs 👉 Kubernetes Playground Goal: Be confident to deploy small apps on Kubernetes. What to explore: Tools: 👉 KodeKloud Kubernetes Learning Path Goal: Run small microservices apps in Kubernetes with persistence &amp;amp; scaling. What to master: Certification Tip: Start preparing for CKA (Certified Kubernetes Administrator). Tools: 👉 KodeKloud CKA Course 👉 Official Kubernetes Docs Goal: Be job-ready for DevOps &amp;amp; Cloud Native roles. We recommend keeping this simple checklist as your personal tracker : [ ] I understand Containers &amp;amp; Docker [ ] I know how to use kubectl [ ] I can create and manage Pods [ ] I know how Deployments &amp;amp; ReplicaSets work [ ] I can expose apps using Services [ ] I can manage ConfigMaps &amp;amp; Secrets [ ] I understand Clusters, Nodes, and the Control Plane [ ] I ’ve tried Kubernetes labs or playgrounds [ ] I’ve deployed a real-world app in Kubernetes [ ] I ’m exploring intermediate concepts (Volumes, Ingress, Monitoring) 👉 Pro tip: Print it or keep it in Notion/GitHub and check items off as you progress! Kubernetes is NOT something you master overnight. The key is consistent practice + real projects. Even learning these basics puts you ahead of most beginner engineers. You’ve started your Cloud Native journey — keep going. We’ll be here to help every step of the way.</description></item><item><title>Day 6: ConfigMaps &amp; Secrets — Managing App Settings and Sensitive Data in Kubernetes</title><link>https://kubermates.org/docs/2025-05-01-day-6-configmaps-secrets-managing-app-settings-and-sensitive-data-in-kubernetes/</link><pubDate>Thu, 01 May 2025 18:11:50 +0000</pubDate><guid>https://kubermates.org/docs/2025-05-01-day-6-configmaps-secrets-managing-app-settings-and-sensitive-data-in-kubernetes/</guid><description>In traditional apps — whether Node. js, Python, Java, or others — you’ve probably done this before: And sometimes… you (accidentally or lazily) hardcode passwords into the code itself. 😬 But in Kubernetes, there’s a better and safer way to do this. Enter: ConfigMaps and Secrets It keeps your app configs separate from your app code and container image — which is great for flexibility and security. Secrets are base64-encoded and can be managed with tighter access controls in Kubernetes. You: And a Secret: Then, in your Pod spec (simplified YAML): 👉 Use the KodeKloud Kubernetes Playground 1 - Create a Secret: 2 - Create a Pod using that secret: Apply it with: You’ll see the password securely injected. Imagine you’re deploying an app on a shared team server. 📅 Day 7: Your Kubernetes Learning Roadmap — What’s Next After the Basics? You’ll get: New here? Start from Day 1 and catch up on the series: Day 1: What Is Kubernetes &amp;amp; Why Should You Care? Discover why Kubernetes matters and how it changes the game. Day 2: What Are Pods in Kubernetes? Understand the smallest deployable unit in Kubernetes. Day 3: Understanding Nodes, Clusters &amp;amp; the Kubernetes Control Plane See how all the pieces connect behind the scenes. Day 4: Deployments &amp;amp; ReplicaSets — How Kubernetes Runs and Manages Your App ⚙Learn how Kubernetes keeps your apps running smoothly. Day 5: Kubernetes Services — How Your App Gets a Stable IP or URL Discover how Services expose and connect your app reliably.</description></item><item><title>Day 5: Kubernetes Services — How Your App Gets a Stable IP or URL</title><link>https://kubermates.org/docs/2025-04-29-day-5-kubernetes-services-how-your-app-gets-a-stable-ip-or-url/</link><pubDate>Tue, 29 Apr 2025 17:26:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-04-29-day-5-kubernetes-services-how-your-app-gets-a-stable-ip-or-url/</guid><description>By now, you’ve launched a container, wrapped it in a Pod, deployed it using a Deployment, and scaled it up to multiple Pods. But here’s the next problem: You try running: And you see something like: Great — but: That’s where Services come in. You can think of it as: So even if Pods restart, the Service endpoint never changes. Let’s say you run 3 Pods of a web app with the label: You create a Service like this: Now, when someone accesses the Service: Imagine your app’s Pods are like food trucks moving around a festival ground. A Service is like the signpost that says: You don’t care where the trucks are parked — you just follow the sign. Kubernetes routes you to the right place, even if trucks come and go. Use the Kubernetes Playground: 👉 KodeKloud Kubernetes Playground Create a deployment: Now run: Look for the NodePort (e. g. , 30123 ) and try opening: You’re now accessing your app through a Kubernetes Service! 📅 Day 6: ConfigMaps &amp;amp; Secrets — Managing App Settings and Sensitive Data You’ll learn: New here? Start from Day 1 and catch up on the series: Day 1: What Is Kubernetes &amp;amp; Why Should You Care? Discover why Kubernetes matters and how it changes the game. Day 2: What Are Pods in Kubernetes? Understand the smallest deployable unit in Kubernetes. Day 3: Understanding Nodes, Clusters &amp;amp; the Kubernetes Control Plane See how all the pieces connect behind the scenes. Day 4: Deployments &amp;amp; ReplicaSets — How Kubernetes Runs and Manages Your App Learn how Kubernetes keeps your apps running smoothly.</description></item></channel></rss>