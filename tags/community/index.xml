<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Community on Kubermates</title><link>https://kubermates.org/tags/community/</link><description>Recent content in Community on Kubermates</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Tue, 19 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kubermates.org/tags/community/index.xml" rel="self" type="application/rss+xml"/><item><title>launching kubermates</title><link>https://kubermates.org/blog/first-post/</link><pubDate>Tue, 19 Aug 2025 00:00:00 +0000</pubDate><guid>https://kubermates.org/blog/first-post/</guid><description>&lt;p&gt;we are live
kubermates will publish practical guides across aks eks gke and onprem&lt;/p&gt;</description></item><item><title>Blog: Post-Quantum Cryptography in Kubernetes</title><link>https://kubermates.org/docs/2025-07-18-blog-post-quantum-cryptography-in-kubernetes/</link><pubDate>Fri, 18 Jul 2025 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-07-18-blog-post-quantum-cryptography-in-kubernetes/</guid><description>Post-Quantum Cryptography in Kubernetes What is Post-Quantum Cryptography Key exchange vs. digital signatures: different needs, different timelines State of PQC key exchange mechanisms (KEMs) today Post-quantum KEMs in Kubernetes: an unexpected arrival The Go version mismatch pitfall Limitations: packet size State of Post-Quantum Signatures Conclusion The world of cryptography is on the cusp of a major shift with the advent of quantum computing. While powerful quantum computers are still largely theoretical for many applications, their potential to break current cryptographic standards is a serious concern, especially for long-lived systems. This is where Post-Quantum Cryptography (PQC) comes in. In this article, I&amp;rsquo;ll dive into what PQC means for TLS and, more specifically, for the Kubernetes ecosystem. I’ll explain what the (suprising) state of PQC in Kubernetes is and what the implications are for current and future clusters. Post-Quantum Cryptography refers to cryptographic algorithms that are thought to be secure against attacks by both classical and quantum computers. The primary concern is that quantum computers, using algorithms like Shor&amp;rsquo;s Algorithm , could efficiently break widely used public-key cryptosystems such as RSA and Elliptic Curve Cryptography (ECC), which underpin much of today&amp;rsquo;s secure communication, including TLS. The industry is actively working on standardizing and adopting PQC algorithms. One of the first to be standardized by NIST is the Module-Lattice Key Encapsulation Mechanism ( ML-KEM ), formerly known as Kyber, and now standardized as FIPS-203 (PDF download). ML-KEM It is difficult to predict when quantum computers will be able to break classical algorithms. However, it is clear that we need to start migrating to PQC algorithms now, as the next section shows.</description></item><item><title>Blog: Changes to Kubernetes Slack</title><link>https://kubermates.org/docs/2025-06-16-blog-changes-to-kubernetes-slack/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-06-16-blog-changes-to-kubernetes-slack/</guid><description>Changes to Kubernetes Slack UPDATE : We’ve received notice from Salesforce that our Slack workspace WILL NOT BE DOWNGRADED on June 20th. Stand by for more details, but for now, there is no urgency to back up private channels or direct messages. Kubernetes Slack will lose its special status and will be changing into a standard free Slack on June 20, 2025. Sometime later this year, our community may move to a new platform. If you are responsible for a channel or private channel, or a member of a User Group, you will need to take some actions as soon as you can. For the last decade, Slack has supported our project with a free customized enterprise account. They have let us know that they can no longer do so, particularly since our Slack is one of the largest and more active ones on the platform. As such, they will be downgrading it to a standard free Slack while we decide on, and implement, other options. On Friday, June 20, we will be subject to the feature limitations of free Slack. The primary ones which will affect us will be only retaining 90 days of history, and having to disable several apps and workflows which we are currently using. The Slack Admin team will do their best to manage these limitations. Responsible channel owners, members of private channels, and members of User Groups should take some actions to prepare for the upgrade and preserve information as soon as possible.</description></item><item><title>Blog: Spotlight on SIG Apps</title><link>https://kubermates.org/docs/2025-03-12-blog-spotlight-on-sig-apps/</link><pubDate>Wed, 12 Mar 2025 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-03-12-blog-spotlight-on-sig-apps/</guid><description>Spotlight on SIG Apps Introductions About SIG Apps Best practices and challenges Contributing to SIG Apps Looking ahead In our ongoing SIG Spotlight series, we dive into the heart of the Kubernetes project by talking to the leaders of its various Special Interest Groups (SIGs). This time, we focus on SIG Apps , the group responsible for everything related to developing, deploying, and operating applications on Kubernetes. Sandipan Panda ( DevZero ) had the opportunity to interview Maciej Szulik ( Defense Unicorns ) and Janet Kuo ( Google ), the chairs and tech leads of SIG Apps. They shared their experiences, challenges, and visions for the future of application management within the Kubernetes ecosystem. Sandipan: Hello, could you start by telling us a bit about yourself, your role, and your journey within the Kubernetes community that led to your current roles in SIG Apps? Maciej : Hey, my name is Maciej, and I’m one of the leads for SIG Apps. Aside from this role, you can also find me helping SIG CLI and also being one of the Steering Committee members. I’ve been contributing to Kubernetes since late 2014 in various areas, including controllers, apiserver, and kubectl. Janet : Certainly! I’m Janet, a Staff Software Engineer at Google, and I’ve been deeply involved with the Kubernetes project since its early days, even before the 1. 0 launch in 2015. It’s been an amazing journey! My current role within the Kubernetes community is one of the chairs and tech leads of SIG Apps. My journey with SIG Apps started organically. I started with building the Deployment API and adding rolling update functionalities.</description></item><item><title>Blog: Spotlight on SIG etcd</title><link>https://kubermates.org/docs/2025-03-04-blog-spotlight-on-sig-etcd/</link><pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-03-04-blog-spotlight-on-sig-etcd/</guid><description>Spotlight on SIG etcd Introducing SIG etcd Becoming a Kubernetes Special Interest Group (SIG) The road ahead Getting involved In this SIG etcd spotlight we talked with James Blair , Marek Siarkowicz , Wenjia Zhang , and Benjamin Wang to learn a bit more about this Kubernetes Special Interest Group. Frederico: Hello, thank you for the time! Let’s start with some introductions, could you tell us a bit about yourself, your role and how you got involved in Kubernetes. Benjamin: Hello, I am Benjamin. I am a SIG etcd Tech Lead and one of the etcd maintainers. I work for VMware, which is part of the Broadcom group. I got involved in Kubernetes &amp;amp; etcd &amp;amp; CSI ( Container Storage Interface ) because of work and also a big passion for open source. I have been working on Kubernetes &amp;amp; etcd (and also CSI) since 2020. James: Hey team, I’m James, a co-chair for SIG etcd and etcd maintainer. I work at Red Hat as a Specialist Architect helping people adopt cloud native technology. I got involved with the Kubernetes ecosystem in 2019. Around the end of 2022 I noticed how the etcd community and project needed help so started contributing as often as I could. There is a saying in our community that “you come for the technology, and stay for the people”: for me this is absolutely real, it’s been a wonderful journey so far and I’m excited to support our community moving forward.</description></item><item><title>Blog: Spotlight on SIG Architecture: Enhancements</title><link>https://kubermates.org/docs/2025-01-21-blog-spotlight-on-sig-architecture-enhancements/</link><pubDate>Tue, 21 Jan 2025 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2025-01-21-blog-spotlight-on-sig-architecture-enhancements/</guid><description>Spotlight on SIG Architecture: Enhancements The Enhancements subproject The KEP and its impact Current areas of focus Getting involved This is the fourth interview of a SIG Architecture Spotlight series that will cover the different subprojects, and we will be covering SIG Architecture: Enhancements. In this SIG Architecture spotlight we talked with Kirsten Garrison , lead of the Enhancements subproject. Frederico (FSM): Hi Kirsten, very happy to have the opportunity to talk about the Enhancements subproject. Let’s start with some quick information about yourself and your role. Kirsten Garrison (KG) : I’m a lead of the Enhancements subproject of SIG-Architecture and currently work at Google. I first got involved by contributing to the service-catalog project with the help of Carolyn Van Slyck. With time, I joined the Release team , eventually becoming the Enhancements Lead and a Release Lead shadow. While on the release team, I worked on some ideas to make the process better for the SIGs and Enhancements team (the opt-in process) based on my team’s experiences. Eventually, I started attending Subproject meetings and contributing to the Subproject’s work. FSM: You mentioned the Enhancements subproject: how would you describe its main goals and areas of intervention? KG : The Enhancements Subproject primarily concerns itself with the Kubernetes Enhancement Proposal ( KEP for short)—the “design” documents required for all features and significant changes to the Kubernetes project. FSM: The improvement of the KEP process was (and is) one in which SIG Architecture was heavily involved. Could you explain the process to those that aren’t aware of it? KG : Every release , the SIGs let the Release Team know which features they intend to work on to be put into the release.</description></item><item><title>Blog: Spotlight on Kubernetes Upstream Training in Japan</title><link>https://kubermates.org/docs/2024-10-28-blog-spotlight-on-kubernetes-upstream-training-in-japan/</link><pubDate>Mon, 28 Oct 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-10-28-blog-spotlight-on-kubernetes-upstream-training-in-japan/</guid><description>Spotlight on Kubernetes Upstream Training in Japan What is Kubernetes upstream training in Japan? Interview with participants Keita Mochizuki ( NTT DATA Group Corporation ) Yoshiki Fujikane ( CyberAgent, Inc. ) Future of Kubernetes upstream training We are organizers of Kubernetes Upstream Training in Japan. Our team is composed of members who actively contribute to Kubernetes, including individuals who hold roles such as member, reviewer, approver, and chair. Our goal is to increase the number of Kubernetes contributors and foster the growth of the community. While Kubernetes community is friendly and collaborative, newcomers may find the first step of contributing to be a bit challenging. Our training program aims to lower that barrier and create an environment where even beginners can participate smoothly. Our training started in 2019 and is held 1 to 2 times a year. Initially, Kubernetes Upstream Training was conducted as a co-located event of KubeCon (Kubernetes Contributor Summit), but we launched Kubernetes Upstream Training in Japan with the aim of increasing Japanese contributors by hosting a similar event in Japan. Before the pandemic, the training was held in person, but since 2020, it has been conducted online. The training offers the following content for those who have not yet contributed to Kubernetes: Introduction to Kubernetes community Overview of Kubernetes codebase and how to create your first PR Tips and encouragement to lower participation barriers, such as language How to set up the development environment Hands-on session using kubernetes-sigs/contributor-playground At the beginning of the program, we explain why contributing to Kubernetes is important and who can contribute. We emphasize that contributing to Kubernetes allows you to make a global impact and that Kubernetes community is looking forward to your contributions! We also explain Kubernetes community, SIGs, and Working Groups. Next, we explain the roles and responsibilities of Member, Reviewer, Approver, Tech Lead, and Chair.</description></item><item><title>Blog: Announcing the 2024 Steering Committee Election Results</title><link>https://kubermates.org/docs/2024-10-02-blog-announcing-the-2024-steering-committee-election-results/</link><pubDate>Wed, 02 Oct 2024 15:10:00 -0500</pubDate><guid>https://kubermates.org/docs/2024-10-02-blog-announcing-the-2024-steering-committee-election-results/</guid><description>Announcing the 2024 Steering Committee Election Results Results Big thanks! Get involved with the Steering Committee The 2024 Steering Committee Election is now complete. The Kubernetes Steering Committee consists of 7 seats, 3 of which were up for election in 2024. Incoming committee members serve a term of 2 years, and all members are elected by the Kubernetes Community. This community body is significant since it oversees the governance of the entire Kubernetes project. With that great power comes great responsibility. You can learn more about the steering committee’s role in their charter. Thank you to everyone who voted in the election; your participation helps support the community’s continued health and success. Congratulations to the elected committee members whose two year terms begin immediately (listed in alphabetical order by GitHub handle): Antonio Ojea ( @aojea ), Google Benjamin Elder ( @BenTheElder ), Google Sascha Grunert ( @saschagrunert ), Red Hat They join continuing members: Stephen Augustus ( @justaugustus ), Cisco Paco Xu 徐俊杰 ( @pacoxu ), DaoCloud Patrick Ohly ( @pohly ), Intel Maciej Szulik ( @soltysh ), Defense Unicorns Benjamin Elder is a returning Steering Committee Member. Thank you and congratulations on a successful election to this round’s election officers: Bridget Kromhout ( @bridgetkromhout ) Christoph Blecker ( @cblecker ) Priyanka Saggu ( @Priyankasaggu11929 ) Thanks to the Emeritus Steering Committee Members. Your service is appreciated by the community: Bob Killen ( @mrbobbytables ) Nabarun Pal ( @palnabarun ) And thank you to all the candidates who came forward to run for election. This governing body, like all of Kubernetes, is open to all. You can follow along with Steering Committee meeting notes and weigh in by filing an issue or creating a PR against their repo.</description></item><item><title>Blog: Spotlight on CNCF Deaf and Hard-of-hearing Working Group (DHHWG)</title><link>https://kubermates.org/docs/2024-09-30-blog-spotlight-on-cncf-deaf-and-hard-of-hearing-working-group-dhhwg/</link><pubDate>Mon, 30 Sep 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-09-30-blog-spotlight-on-cncf-deaf-and-hard-of-hearing-working-group-dhhwg/</guid><description>Spotlight on CNCF Deaf and Hard-of-hearing Working Group (DHHWG) Introduction Motivation and early milestones Overcoming challenges and addressing misconceptions Impact and the role of allies Expanding DEI efforts and future vision Call to action Wrapping up In recognition of Deaf Awareness Month and the importance of inclusivity in the tech community, we are spotlighting Catherine Paganini , facilitator and one of the founding members of CNCF Deaf and Hard-of-Hearing Working Group (DHHWG). In this interview, Sandeep Kanabar , a deaf member of the DHHWG and part of the Kubernetes SIG ContribEx Communications team , sits down with Catherine to explore the impact of the DHHWG on cloud native projects like Kubernetes. Sandeep’s journey is a testament to the power of inclusion. Through his involvement in the DHHWG, he connected with members of the Kubernetes community who encouraged him to join SIG ContribEx - the group responsible for sustaining the Kubernetes contributor experience. In an ecosystem where open-source projects are actively seeking contributors and maintainers, this story highlights how important it is to create pathways for underrepresented groups, including those with disabilities, to contribute their unique perspectives and skills. In this interview, we delve into Catherine’s journey, the challenges and triumphs of establishing the DHHWG, and the vision for a more inclusive future in cloud native. We invite Kubernetes contributors, maintainers, and community members to reflect on the significance of empathy, advocacy, and community in fostering a truly inclusive environment for all, and to think about how they can support efforts to increase diversity and accessibility within their own projects. Sandeep Kanabar (SK): Hello Catherine, could you please introduce yourself, share your professional background, and explain your connection to the Kubernetes ecosystem? Catherine Paganini (CP) : I’m the Head of Marketing at Buoyant , the creator of Linkerd , the CNCF-graduated service mesh, and 5th CNCF project. Four years ago, I started contributing to open source. The initial motivation was to make cloud native concepts more accessible to newbies and non-technical people. Without a technical background, it was hard for me to understand what Kubernetes, containers, service meshes, etc. mean.</description></item><item><title>Blog: Spotlight on SIG Scheduling</title><link>https://kubermates.org/docs/2024-09-24-blog-spotlight-on-sig-scheduling/</link><pubDate>Tue, 24 Sep 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-09-24-blog-spotlight-on-sig-scheduling/</guid><description>Spotlight on SIG Scheduling Introductions About SIG Scheduling Contributing to SIG Scheduling Future Directions Closing Remarks In this SIG Scheduling spotlight we talked with Kensei Nakada , an approver in SIG Scheduling. Arvind: Hello, thank you for the opportunity to learn more about SIG Scheduling! Would you like to introduce yourself and tell us a bit about your role, and how you got involved with Kubernetes? Kensei : Hi, thanks for the opportunity! I’m Kensei Nakada ( @sanposhiho ), a software engineer at Tetrate. io. I have been contributing to Kubernetes in my free time for more than 3 years, and now I’m an approver of SIG Scheduling in Kubernetes. Also, I’m a founder/owner of two SIG subprojects, kube-scheduler-simulator and kube-scheduler-wasm-extension. AP: That’s awesome! You’ve been involved with the project since a long time. Can you provide a brief overview of SIG Scheduling and explain its role within the Kubernetes ecosystem? KN : As the name implies, our responsibility is to enhance scheduling within Kubernetes. Specifically, we develop the components that determine which Node is the best place for each Pod. In Kubernetes, our main focus is on maintaining the kube-scheduler , along with other scheduling-related components as part of our SIG subprojects. That makes me curious–what recent innovations or developments has SIG Scheduling introduced to Kubernetes scheduling? KN : From a feature perspective, there have been several enhancements to PodTopologySpread recently. PodTopologySpread is a relatively new feature in the scheduler, and we are still in the process of gathering feedback and making improvements. PodTopologySpread PodTopologySpread Most recently, we have been focusing on a new internal enhancement called QueueingHint which aims to enhance scheduling throughput.</description></item><item><title>Blog: Spotlight on SIG API Machinery</title><link>https://kubermates.org/docs/2024-08-07-blog-spotlight-on-sig-api-machinery/</link><pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-08-07-blog-spotlight-on-sig-api-machinery/</guid><description>Spotlight on SIG API Machinery Introductions SIG Machinery’s scope An evolving collaboration model The challenges of Kubernetes popularity The road ahead Joining the fun We recently talked with Federico Bongiovanni (Google) and David Eads (Red Hat), Chairs of SIG API Machinery, to know a bit more about this Kubernetes Special Interest Group. Frederico (FSM): Hello, and thank your for your time. To start with, could you tell us about yourselves and how you got involved in Kubernetes? David : I started working on OpenShift (the Red Hat distribution of Kubernetes) in the fall of 2014 and got involved pretty quickly in API Machinery. My first PRs were fixing kube-apiserver error messages and from there I branched out to kubectl ( kubeconfigs are my fault!), auth ( RBAC and *Review APIs are ports from OpenShift), apps ( workqueues and sharedinformers for example). Don’t tell the others, but API Machinery is still my favorite :) kubectl auth *Review apps Federico : I was not as early in Kubernetes as David, but now it’s been more than six years. At my previous company we were starting to use Kubernetes for our own products, and when I came across the opportunity to work directly with Kubernetes I left everything and boarded the ship (no pun intended). I joined Google and Kubernetes in early 2018, and have been involved since. FSM: It only takes a quick look at the SIG API Machinery charter to see that it has quite a significant scope, nothing less than the Kubernetes control plane. Could you describe this scope in your own words? David : We own the kube-apiserver and how to efficiently use it. On the backend, that includes its contract with backend storage and how it allows API schema evolution over time. On the frontend, that includes schema best practices, serialization, client patterns, and controller patterns on top of all of it. kube-apiserver Federico : Kubernetes has a lot of different components, but the control plane has a really critical mission: it’s your communication layer with the cluster and also owns all the extensibility mechanisms that make Kubernetes so powerful.</description></item><item><title>Blog: Spotlight on SIG Node</title><link>https://kubermates.org/docs/2024-06-20-blog-spotlight-on-sig-node/</link><pubDate>Thu, 20 Jun 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-06-20-blog-spotlight-on-sig-node/</guid><description>Spotlight on SIG Node Introductions Understanding SIG Node Challenges and Opportunities Sidecar containers Contributing to SIG Node Conclusion In the world of container orchestration, Kubernetes reigns supreme, powering some of the most complex and dynamic applications across the globe. Behind the scenes, a network of Special Interest Groups (SIGs) drives Kubernetes’ innovation and stability. Today, I have the privilege of speaking with Matthias Bertschy , Gunju Kim , and Sergey Kanzhelev , members of SIG Node , who will shed some light on their roles, challenges, and the exciting developments within SIG Node. Answers given collectively by all interviewees will be marked by their initials. Arpit: Thank you for joining us today. Could you please introduce yourselves and provide a brief overview of your roles within SIG Node? Matthias: My name is Matthias Bertschy, I am French and live next to Lake Geneva, near the French Alps. I have been a Kubernetes contributor since 2017, a reviewer for SIG Node and a maintainer of Prow. I work as a Senior Kubernetes Developer for a security startup named ARMO , which donated Kubescape to the CNCF. Gunju: My name is Gunju Kim. I am a software engineer at NAVER , where I focus on developing a cloud platform for search services. I have been contributing to the Kubernetes project in my free time since 2021. Sergey: My name is Sergey Kanzhelev.</description></item><item><title>Blog: Introducing Hydrophone</title><link>https://kubermates.org/docs/2024-05-23-blog-introducing-hydrophone/</link><pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-05-23-blog-introducing-hydrophone/</guid><description>Introducing Hydrophone Simplified Kubernetes testing with Hydrophone Key features of Hydrophone Streamlining Kubernetes conformance with Hydrophone Getting started with Hydrophone Community and contributions Join us in simplifying Kubernetes testing In the ever-changing landscape of Kubernetes, ensuring that clusters operate as intended is essential. This is where conformance testing becomes crucial, verifying that a Kubernetes cluster meets the required standards set by the community. Today, we’re thrilled to introduce Hydrophone , a lightweight runner designed to streamline Kubernetes tests using the official conformance images released by the Kubernetes release team. Hydrophone’s design philosophy centers around ease of use. By starting the conformance image as a pod within the conformance namespace, Hydrophone waits for the tests to conclude, then prints and exports the results. This approach offers a hassle-free method for running either individual tests or the entire Conformance Test Suite. Ease of Use : Designed with simplicity in mind, Hydrophone provides an easy-to-use tool for conducting Kubernetes conformance tests. Official Conformance Images : It leverages the official conformance images from the Kubernetes Release Team, ensuring that you’re using the most up-to-date and reliable resources for testing. Flexible Test Execution : Whether you need to run a single test, the entire Conformance Test Suite, or anything in between. In the Kubernetes world, where providers like EKS, Rancher, and k3s offer diverse environments, ensuring consistent experiences is vital. This consistency is anchored in conformance testing, which validates whether these environments adhere to Kubernetes community standards. Historically, this validation has either been cumbersome or requires third-party tools.</description></item><item><title>Blog: Spotlight on SIG Architecture: Code Organization</title><link>https://kubermates.org/docs/2024-04-11-blog-spotlight-on-sig-architecture-code-organization/</link><pubDate>Thu, 11 Apr 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-04-11-blog-spotlight-on-sig-architecture-code-organization/</guid><description>Spotlight on SIG Architecture: Code Organization Introducing the Code Organization subproject Code organization and Kubernetes Release cycle and current priorities Wrapping up This is the third interview of a SIG Architecture Spotlight series that will cover the different subprojects. We will cover SIG Architecture: Code Organization. In this SIG Architecture spotlight I talked with Madhav Jivrajani (VMware), a member of the Code Organization subproject. Frederico (FSM) : Hello Madhav, thank you for your availability. Could you start by telling us a bit about yourself, your role and how you got involved in Kubernetes? Madhav Jivrajani (MJ) : Hello! My name is Madhav Jivrajani, I serve as a technical lead for SIG Contributor Experience and a GitHub Admin for the Kubernetes project. Apart from that I also contribute to SIG API Machinery and SIG Etcd, but more recently, I’ve been helping out with the work that is needed to help Kubernetes stay on supported versions of Go , and it is through this that I am involved with the Code Organization subproject of SIG Architecture. FSM : A project the size of Kubernetes must have unique challenges in terms of code organization – is this a fair assumption? If so, what would you pick as some of the main challenges that are specific to Kubernetes? MJ : That’s a fair assumption! The first interesting challenge comes from the sheer size of the Kubernetes codebase. We have ≅2. 2 million lines of Go code (which is steadily decreasing thanks to dims and other folks in this sub-project!), and a little over 240 dependencies that we rely on either directly or indirectly, which is why having a sub-project dedicated to helping out with dependency management is crucial: we need to know what dependencies we’re pulling in, what versions these dependencies are at, and tooling to help make sure we are managing these dependencies across different parts of the codebase in a consistent manner. Another interesting challenge with Kubernetes is that we publish a lot of Go modules as part of the Kubernetes release cycles, one example of this is client-go. However, we as a project would also like the benefits of having everything in one repository to get the advantages of using a monorepo, like atomic commits… so, because of this, code organization works with other SIGs (like SIG Release) to automate the process of publishing code from the monorepo to downstream individual repositories which are much easier to consume, and this way you won’t have to import the entire Kubernetes codebase! client-go FSM : For someone just starting contributing to Kubernetes code-wise, what are the main things they should consider in terms of code organization? How would you sum up the key concepts? MJ : I think one of the key things to keep in mind at least as you’re starting off is the concept of staging directories. In the kubernetes/kubernetes repository, you will come across a directory called staging/.</description></item><item><title>Blog: Using Go workspaces in Kubernetes</title><link>https://kubermates.org/docs/2024-03-19-blog-using-go-workspaces-in-kubernetes/</link><pubDate>Tue, 19 Mar 2024 08:30:00 -0800</pubDate><guid>https://kubermates.org/docs/2024-03-19-blog-using-go-workspaces-in-kubernetes/</guid><description>Using Go workspaces in Kubernetes GOPATH and Go modules The problems Enter workspaces The work Results Thanks The Go programming language has played a huge role in the success of Kubernetes. As Kubernetes has grown, matured, and pushed the bounds of what “regular” projects do, the Go project team has also grown and evolved the language and tools. In recent releases, Go introduced a feature called “workspaces” which was aimed at making projects like Kubernetes easier to manage. We’ve just completed a major effort to adopt workspaces in Kubernetes, and the results are great. Our codebase is simpler and less error-prone, and we’re no longer off on our own technology island. Kubernetes is one of the most visible open source projects written in Go. The earliest versions of Kubernetes, dating back to 2014, were built with Go 1. 3. Today, 10 years later, Go is up to version 1. 22 — and let’s just say that a whole lot has changed. In 2014, Go development was entirely based on GOPATH. As a Go project, Kubernetes lived by the rules of GOPATH.</description></item><item><title>Blog: Spotlight on SIG Cloud Provider</title><link>https://kubermates.org/docs/2024-03-01-blog-spotlight-on-sig-cloud-provider/</link><pubDate>Fri, 01 Mar 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-03-01-blog-spotlight-on-sig-cloud-provider/</guid><description>Spotlight on SIG Cloud Provider Introduction Functioning and working Important subprojects Accomplishments Advice for new contributors One of the most popular ways developers use Kubernetes-related services is via cloud providers, but have you ever wondered how cloud providers can do that? How does this whole process of integration of Kubernetes to various cloud providers happen? To answer that, let’s put the spotlight on SIG Cloud Provider. SIG Cloud Provider works to create seamless integrations between Kubernetes and various cloud providers. Their mission? Keeping the Kubernetes ecosystem fair and open for all. By setting clear standards and requirements, they ensure every cloud provider plays nicely with Kubernetes. It is their responsibility to configure cluster components to enable cloud provider integrations. In this blog of the SIG Spotlight series, Arujjwal Negi interviews Michael McCune (Red Hat), also known as elmiko , co-chair of SIG Cloud Provider, to give us an insight into the workings of this group. Arujjwal : Let’s start by getting to know you. Can you give us a small intro about yourself and how you got into Kubernetes? Michael : Hi, I’m Michael McCune, most people around the community call me by my handle, elmiko. I’ve been a software developer for a long time now (Windows 3. 1 was popular when I started!), and I’ve been involved with open-source software for most of my career. I first got involved with Kubernetes as a developer of machine learning and data science applications; the team I was on at the time was creating tutorials and examples to demonstrate the use of technologies like Apache Spark on Kubernetes. That said, I’ve been interested in distributed systems for many years and when an opportunity arose to join a team working directly on Kubernetes, I jumped at it! Arujjwal : Can you give us an insight into what SIG Cloud Provider does and how it functions? Michael : SIG Cloud Provider was formed to help ensure that Kubernetes provides a neutral integration point for all infrastructure providers.</description></item><item><title>Blog: A look into the Kubernetes Book Club</title><link>https://kubermates.org/docs/2024-02-22-blog-a-look-into-the-kubernetes-book-club/</link><pubDate>Thu, 22 Feb 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-02-22-blog-a-look-into-the-kubernetes-book-club/</guid><description>A look into the Kubernetes Book Club Creating the Book Club Topics covered in the Book Club Joining the Book Club Learning Kubernetes and the entire ecosystem of technologies around it is not without its challenges. In this interview, we will talk with Carlos Santana (AWS) to learn a bit more about how he created the Kubernetes Book Club , how it works, and how anyone can join in to take advantage of a community-based learning experience. Frederico Muñoz (FSM) : Hello Carlos, thank you so much for your availability. To start with, could you tell us a bit about yourself? Carlos Santana (CS) : Of course. My experience in deploying Kubernetes in production six years ago opened the door for me to join Knative and then contribute to Kubernetes through the Release Team. Working on upstream Kubernetes has been one of the best experiences I’ve had in open-source. Over the past two years, in my role as a Senior Specialist Solutions Architect at AWS, I have been assisting large enterprises build their internal developer platforms (IDP) on top of Kubernetes. Going forward, my open source contributions are directed towards CNOE and CNCF projects like Argo , Crossplane , and Backstage. FSM : So your path led you to Kubernetes, and at that point what was the motivating factor for starting the Book Club? CS : The idea for the Kubernetes Book Club sprang from a casual suggestion during a TGIK livestream. For me, it was more than just about reading a book; it was about creating a learning community. This platform has not only been a source of knowledge but also a support system, especially during the challenging times of the pandemic. It’s gratifying to see how this initiative has helped members cope and grow.</description></item><item><title>Blog: Spotlight on SIG Release (Release Team Subproject)</title><link>https://kubermates.org/docs/2024-01-15-blog-spotlight-on-sig-release-release-team-subproject/</link><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-01-15-blog-spotlight-on-sig-release-release-team-subproject/</guid><description>Spotlight on SIG Release (Release Team Subproject) Final thoughts The Release Special Interest Group (SIG Release), where Kubernetes sharpens its blade with cutting-edge features and bug fixes every 4 months. Have you ever considered how such a big project like Kubernetes manages its timeline so efficiently to release its new version, or how the internal workings of the Release Team look like? If you’re curious about these questions or want to know more and get involved with the work SIG Release does, read on! SIG Release plays a crucial role in the development and evolution of Kubernetes. Its primary responsibility is to manage the release process of new versions of Kubernetes. It operates on a regular release cycle, typically every three to four months. During this cycle, the Kubernetes Release Team works closely with other SIGs and contributors to ensure a smooth and well-coordinated release. This includes planning the release schedule, setting deadlines for code freeze and testing phases, as well as creating release artefacts like binaries, documentation, and release notes. Before you read further, it is important to note that there are two subprojects under SIG Release - Release Engineering and Release Team. In this blog post, Nitish Kumar interviews Verónica López (PlanetScale), Technical Lead of SIG Release, with the spotlight on the Release Team subproject, how the release process looks like, and ways to get involved. What is the typical release process for a new version of Kubernetes, from initial planning to the final release? Are there any specific methodologies and tools that you use to ensure a smooth release? The release process for a new Kubernetes version is a well-structured and community-driven effort. There are no specific methodologies or tools as such that we follow, except a calendar with a series of steps to keep things organised. The complete release process looks like this: What is the typical release process for a new version of Kubernetes, from initial planning to the final release? Are there any specific methodologies and tools that you use to ensure a smooth release? The release process for a new Kubernetes version is a well-structured and community-driven effort. There are no specific methodologies or tools as such that we follow, except a calendar with a series of steps to keep things organised.</description></item><item><title>Blog: Blixt - A load-balancer written in Rust, using eBPF, born from Gateway API</title><link>https://kubermates.org/docs/2024-01-08-blog-blixt-a-load-balancer-written-in-rust-using-ebpf-born-from-gateway-api/</link><pubDate>Mon, 08 Jan 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-01-08-blog-blixt-a-load-balancer-written-in-rust-using-ebpf-born-from-gateway-api/</guid><description>Blixt - A load-balancer written in Rust, using eBPF, born from Gateway API History Goals Getting involved In SIG Network we now have a layer 4 (“L4”) load balancer named Blixt. This project started as a fun experiment using emerging technologies and is intended to become a utility for CI and testing to help facilitate the continued development of Gateway API. Are you interested in developing networking tools in Rust and eBPF ? Or perhaps you’re specifically interested in Gateway API? We’ll tell you a bit about the project and how it might benefit you. Blixt originated at Kong as an experiment to test load-balancing ingress traffic for Kubernetes clusters using eBPF for the dataplane. Around the time of Kubecon Detroit (2022) we (the Gateway API maintainers) realized it had significant potential to help us move our TCPRoute and UDPRoute support forward, which had been sort of “stuck in alpha” at the time due to a lack of conformance tests being developed for them. At the same time, various others in the SIG Network community developed an interest in the project due to the rapid growth of eBPFs use on Kubernetes. Given the potential for benefit to the Kubernetes ecosystem and the growing interest, Kong decided it would be helpful to donate the project to Kubernetes SIGs to benefit upstream Kubernetes. Over several months we rewrote the project in Rust (from C), due to a strong contingency of Rust knowledge (and interest) between us developing the project and an active interest in the burgeoning Aya project (a Rust framework for developing eBPF programs). We did eventually move the control plane (specifically) to Golang however, so that we could take advantage of the Kubebuilder and controller-runtime ecosystems. Additionally, we augmented our custom program loader (in eBPF, you generally write loaders that load your BPF byte code into the kernel) with bpfman : a project adjacent to us in the Rust + eBPF ecosystem, which helps solve several security and ergonomic problems with managing BPF programs on Linux systems. After the recently completed license review process , which provided a blanket exception for the use of dual licensed eBPF in CNCF code, the project became officially part of Kubernetes and interest has been growing. We have several goals for the project which revolve around the continued development of Gateway API, with a specific focus on helping mature Layer 4 support (e.</description></item><item><title>Blog: Kubernetes supports running kube-proxy in an unprivileged container</title><link>https://kubermates.org/docs/2024-01-05-blog-kubernetes-supports-running-kube-proxy-in-an-unprivileged-container/</link><pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2024-01-05-blog-kubernetes-supports-running-kube-proxy-in-an-unprivileged-container/</guid><description>Kubernetes supports running kube-proxy in an unprivileged container Background Initializing kube-proxy in an init container Summary This post describes how the &amp;ndash;init-only flag to kube-proxy can be used to run the main kube-proxy container in a stricter securityContext , by performing the configuration that requires privileged mode in a separate init container. Since Windows doesn’t have the equivalent of capabilities , this only works on Linux. &amp;ndash;init-only kube-proxy securityContext capabilities The kube-proxy Pod still only meets the privileged Pod Security Standard , but there is still an improvement because the running container doesn’t need to run privileged. kube-proxy Please note that kube-proxy can be installed in different ways. The examples below assume that kube-proxy is run from a pod, but similar changes could be made in clusters where it is run as a system service. kube-proxy It is undesirable to run a server container like kube-proxy in privileged mode. Security aware users wants to use capabilities instead. kube-proxy If kube-proxy is installed as a POD, the initialization requires “privileged” mode, mostly for setting sysctl’s. However, kube-proxy only tries to set the sysctl’s if they don’t already have the right values. In theory, then, if a privileged init container set the sysctls to the right values, then kube-proxy could run unprivileged. kube-proxy kube-proxy kube-proxy The problem is to know what to setup. Until now the only option has been to read the source to see what changes kube-proxy would have made, but with &amp;ndash;init-only you can have kube-proxy itself do the setup exactly as on a normal start, and then exit.</description></item><item><title>Blog: Contextual logging in Kubernetes 1.29: Better troubleshooting and enhanced logging</title><link>https://kubermates.org/docs/2023-12-20-blog-contextual-logging-in-kubernetes-1-29-better-troubleshooting-and-enhanced-l/</link><pubDate>Wed, 20 Dec 2023 09:30:00 -0800</pubDate><guid>https://kubermates.org/docs/2023-12-20-blog-contextual-logging-in-kubernetes-1-29-better-troubleshooting-and-enhanced-l/</guid><description>Contextual logging in Kubernetes 1. 29: Better troubleshooting and enhanced logging What is contextual logging? How to use it Performance impact Impact on downstream users Further reading Get involved On behalf of the Structured Logging Working Group and SIG Instrumentation , we are pleased to announce that the contextual logging feature introduced in Kubernetes v1. 24 has now been successfully migrated to two components (kube-scheduler and kube-controller-manager) as well as some directories. This feature aims to provide more useful logs for better troubleshooting of Kubernetes and to empower developers to enhance Kubernetes. Contextual logging is based on the go-logr API. The key idea is that libraries are passed a logger instance by their caller and use that for logging instead of accessing a global logger. The binary decides the logging implementation, not the libraries. The go-logr API is designed around structured logging and supports attaching additional information to a logger. This enables additional use cases: The caller can attach additional information to a logger: WithName adds a “logger” key with the names concatenated by a dot as value WithValues adds key/value pairs When passing this extended logger into a function, and the function uses it instead of the global logger, the additional information is then included in all log entries, without having to modify the code that generates the log entries. This is useful in highly parallel applications where it can become hard to identify all log entries for a certain operation, because the output from different operations gets interleaved. The caller can attach additional information to a logger: WithName adds a “logger” key with the names concatenated by a dot as value WithValues adds key/value pairs When passing this extended logger into a function, and the function uses it instead of the global logger, the additional information is then included in all log entries, without having to modify the code that generates the log entries. This is useful in highly parallel applications where it can become hard to identify all log entries for a certain operation, because the output from different operations gets interleaved.</description></item><item><title>Blog: Spotlight on SIG Testing</title><link>https://kubermates.org/docs/2023-11-24-blog-spotlight-on-sig-testing/</link><pubDate>Fri, 24 Nov 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-11-24-blog-spotlight-on-sig-testing/</guid><description>Spotlight on SIG Testing Meet the contributors Testing practices and tools Subprojects owned by SIG Testing Key challenges and accomplishments The people and the scope Looking ahead Welcome to another edition of the SIG spotlight blog series, where we highlight the incredible work being done by various Special Interest Groups (SIGs) within the Kubernetes project. In this edition, we turn our attention to SIG Testing , a group interested in effective testing of Kubernetes and automating away project toil. SIG Testing focus on creating and running tools and infrastructure that make it easier for the community to write and run tests, and to contribute, analyze and act upon test results. To gain some insights into SIG Testing, Sandipan Panda spoke with Michelle Shepardson , a senior software engineer at Google and a chair of SIG Testing, and Patrick Ohly , a software engineer and architect at Intel and a SIG Testing Tech Lead. Sandipan: Could you tell us a bit about yourself, your role, and how you got involved in the Kubernetes project and SIG Testing? Michelle: Hi! I’m Michelle, a senior software engineer at Google. I first got involved in Kubernetes through working on tooling for SIG Testing, like the external instance of TestGrid. I’m part of oncall for TestGrid and Prow, and am now a chair for the SIG. Patrick: Hello! I work as a software engineer and architect in a team at Intel which focuses on open source Cloud Native projects. When I ramped up on Kubernetes to develop a storage driver, my very first question was “how do I test it in a cluster and how do I log information?” That interest led to various enhancement proposals until I had (re)written enough code that also took over official roles as SIG Testing Tech Lead (for the E2E framework ) and structured logging WG lead. Sandipan: Testing is a field in which multiple approaches and tools exist; how did you arrive at the existing practices? Patrick: I can’t speak about the early days because I wasn’t around yet 😆, but looking back at some of the commit history it’s pretty obvious that developers just took what was available and started using it. For E2E testing, that was Ginkgo+Gomega. Some hacks were necessary, for example around cleanup after a test run and for categorising tests.</description></item><item><title>Blog: Kubernetes Contributor Summit: Behind-the-scenes</title><link>https://kubermates.org/docs/2023-11-03-blog-kubernetes-contributor-summit-behind-the-scenes/</link><pubDate>Fri, 03 Nov 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-11-03-blog-kubernetes-contributor-summit-behind-the-scenes/</guid><description>Kubernetes Contributor Summit: Behind-the-scenes The Contributor Summit What makes it special Organizing the Summit A look ahead Every year, just before the official start of KubeCon+CloudNativeCon, there’s a special event that has a very special place in the hearts of those organizing and participating in it: the Kubernetes Contributor Summit. To find out why, and to provide a behind-the-scenes perspective, we interview Noah Abrahams, whom amongst other roles was the co-lead for the Kubernetes Contributor Summit in 2023. Frederico Muñoz (FSM) : Hello Noah, and welcome. Could you start by introducing yourself and telling us how you got involved in Kubernetes? Noah Abrahams (NA) : I’ve been in this space for quite a while. I got started in IT in the mid 90’s, and I’ve been working in the “Cloud” space for about 15 years. It was, frankly, through a combination of sheer luck (being in the right place at the right time) and having good mentors to pull me into those places (thanks, Tim!), that I ended up at a startup called Apprenda in 2016. While I was there, they pivoted into Kubernetes, and it was the best thing that could have happened to my career. It was around v1. 2 and someone asked me if I could give a presentation on Kubernetes concepts at “my local meetup” in Las Vegas. The meetup didn’t exist yet, so I created it, and got involved in the wider community. One thing led to another, and soon I was involved in ContribEx, joined the release team, was doing booth duty for the CNCF, became an ambassador, and here we are today. FM : Before leading the organisation of the KCSEU 2023, how many other Contributor Summits were you a part of? NA : I was involved in four or five before taking the lead.</description></item><item><title>Blog: Spotlight on SIG Architecture: Production Readiness</title><link>https://kubermates.org/docs/2023-11-02-blog-spotlight-on-sig-architecture-production-readiness/</link><pubDate>Thu, 02 Nov 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-11-02-blog-spotlight-on-sig-architecture-production-readiness/</guid><description>Spotlight on SIG Architecture: Production Readiness About SIG Architecture and the Production Readiness subproject Production readiness and the Kubernetes project Helping with Production Readiness This is the second interview of a SIG Architecture Spotlight series that will cover the different subprojects. In this blog, we will cover the SIG Architecture: Production Readiness subproject. In this SIG Architecture spotlight, we talked with Wojciech Tyczynski (Google), lead of the Production Readiness subproject. Frederico (FSM) : Hello Wojciech, could you tell us a bit about yourself, your role and how you got involved in Kubernetes? Wojciech Tyczynski (WT) : I started contributing to Kubernetes in January 2015. At that time, Google (where I was and still am working) decided to start a Kubernetes team in the Warsaw office (in addition to already existing teams in California and Seattle). I was lucky enough to be one of the seeding engineers for that team. After two months of onboarding and helping with different tasks across the project towards 1. 0 launch, I took ownership of the scalability area and I was leading Kubernetes to support clusters with 5000 nodes. I’m still involved in SIG Scalability as its Technical Lead. That was the start of a journey since scalability is such a cross-cutting topic, and I started contributing to many other areas including, over time, to SIG Architecture. FSM : In SIG Architecture, why specifically the Production Readiness subproject? Was it something you had in mind from the start, or was it an unexpected consequence of your initial involvement in scalability? WT : After reaching that milestone of Kubernetes supporting 5000-node clusters , one of the goals was to ensure that Kubernetes would not degrade its scalability properties over time. While non-scalable implementation is always fixable, designing non-scalable APIs or contracts is problematic.</description></item><item><title>Blog: A Quick Recap of 2023 China Kubernetes Contributor Summit</title><link>https://kubermates.org/docs/2023-10-20-blog-a-quick-recap-of-2023-china-kubernetes-contributor-summit/</link><pubDate>Fri, 20 Oct 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-10-20-blog-a-quick-recap-of-2023-china-kubernetes-contributor-summit/</guid><description>A Quick Recap of 2023 China Kubernetes Contributor Summit A joyful meetup Technical sharing and discussions China’s contributor statistics Acknowledgments On September 26, 2023, the first day of KubeCon + CloudNativeCon + Open Source Summit China 2023 , nearly 50 contributors gathered in Shanghai for the Kubernetes Contributor Summit. All participants in the 2023 Kubernetes Contributor Summit This marked the first in-person offline gathering held in China after three years of the pandemic. The event began with welcome speeches from Kevin Wang from Huawei Cloud, one of the co-chairs of KubeCon, and Puja from Giant Swarm. Following the opening remarks, the contributors introduced themselves briefly. Most attendees were from China, while some contributors had made the journey from Europe and the United States specifically for the conference. Technical experts from companies such as Microsoft, Intel, Huawei, as well as emerging forces like DaoCloud, were present. Laughter and cheerful voices filled the room, regardless of whether English was spoken with European or American accents or if conversations were carried out in authentic Chinese language. This created an atmosphere of comfort, joy, respect, and anticipation. Past contributions brought everyone closer, and mutual recognition and accomplishments made this offline gathering possible. Face to face meeting in Shanghai The attending contributors were no longer just GitHub IDs; they transformed into vivid faces. From sitting together and capturing group photos to attempting to identify “Who is who,” a loosely connected collective emerged. This team structure, although loosely knit and free-spirited, was established to pursue shared dreams.</description></item><item><title>Blog: Spotlight on SIG Architecture: Conformance</title><link>https://kubermates.org/docs/2023-10-05-blog-spotlight-on-sig-architecture-conformance/</link><pubDate>Thu, 05 Oct 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-10-05-blog-spotlight-on-sig-architecture-conformance/</guid><description>Spotlight on SIG Architecture: Conformance About SIG Architecture and the Conformance subproject More on the Conformance Test Suite This is the first interview of a SIG Architecture Spotlight series that will cover the different subprojects. We start with the SIG Architecture: Conformance subproject In this SIG Architecture spotlight, we talked with Riaan Kleinhans (ii-Team), Lead for the Conformance sub-project. Frederico (FSM) : Hello Riaan, and welcome! For starters, tell us a bit about yourself, your role and how you got involved in Kubernetes. Riaan Kleinhans (RK) : Hi! My name is Riaan Kleinhans and I live in South Africa. I am the Project manager for the ii-Team in New Zealand. When I joined ii the plan was to move to New Zealand in April 2020 and then Covid happened. Fortunately, being a flexible and dynamic team we were able to make it work remotely and in very different time zones. The ii. nz team have been tasked with managing the Kubernetes Conformance testing technical debt and writing tests to clear the technical debt. I stepped into the role of project manager to be the link between monitoring, test writing and the community. Through that work I had the privilege of meeting the late Dan Kohn in those first months, his enthusiasm about the work we were doing was a great inspiration. FSM : Thank you - so, your involvement in SIG Architecture started because of the conformance work? RK : SIG Architecture is the home for the Kubernetes Conformance subproject.</description></item><item><title>Blog: Announcing the 2023 Steering Committee Election Results</title><link>https://kubermates.org/docs/2023-10-02-blog-announcing-the-2023-steering-committee-election-results/</link><pubDate>Mon, 02 Oct 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-10-02-blog-announcing-the-2023-steering-committee-election-results/</guid><description>Announcing the 2023 Steering Committee Election Results Results Big Thanks! Get Involved with the Steering Committee The 2023 Steering Committee Election is now complete. The Kubernetes Steering Committee consists of 7 seats, 4 of which were up for election in 2023. Incoming committee members serve a term of 2 years, and all members are elected by the Kubernetes Community. This community body is significant since it oversees the governance of the entire Kubernetes project. With that great power comes great responsibility. You can learn more about the steering committee’s role in their charter. Thank you to everyone who voted in the election; your participation helps support the community’s continued health and success. Congratulations to the elected committee members whose two year terms begin immediately (listed in alphabetical order by GitHub handle): Stephen Augustus ( @justaugustus ), Cisco Paco Xu 徐俊杰 ( @pacoxu ), DaoCloud Patrick Ohly ( @pohly ), Intel Maciej Szulik ( @soltysh ), Red Hat They join continuing members: Benjamin Elder ( @bentheelder ), Google Bob Killen ( @mrbobbytables ), Google Nabarun Pal ( @palnabarun , VMware Stephen Augustus is a returning Steering Committee Member. Thank you and congratulations on a successful election to this round’s election officers: Bridget Kromhout ( @bridgetkromhout ) Davanum Srinavas ( @dims ) Kaslin Fields ( @kaslin ) Thanks to the Emeritus Steering Committee Members. Your service is appreciated by the community: Christoph Blecker ( @cblecker ) Carlos Tadeu Panato Jr. ( @cpanato ) Tim Pepper ( @tpepper ) And thank you to all the candidates who came forward to run for election. This governing body, like all of Kubernetes, is open to all.</description></item><item><title>Blog: Spotlight on SIG ContribEx</title><link>https://kubermates.org/docs/2023-08-14-blog-spotlight-on-sig-contribex/</link><pubDate>Mon, 14 Aug 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-08-14-blog-spotlight-on-sig-contribex/</guid><description>Spotlight on SIG ContribEx Introductions Primary goals and scope Beginner’s guide! Sub-projects under SIG ContribEx Accomplishments Upcoming initiatives Final thoughts What next? Author : Fyka Ansari Welcome to the world of Kubernetes and its vibrant contributor community! In this blog post, we’ll be shining a spotlight on the Special Interest Group for Contributor Experience (SIG ContribEx), an essential component of the Kubernetes project. SIG ContribEx in Kubernetes is responsible for developing and maintaining a healthy and productive community of contributors to the project. This involves identifying and addressing bottlenecks that may hinder the project’s growth and feature velocity, such as pull request latency and the number of open pull requests and issues. SIG ContribEx works to improve the overall contributor experience by creating and maintaining guidelines, tools, and processes that facilitate collaboration and communication among contributors. They also focus on community building and support, including outreach programs and mentorship initiatives to onboard and retain new contributors. Ultimately, the role of SIG ContribEx is to foster a welcoming and inclusive environment that encourages contribution and supports the long-term sustainability of the Kubernetes project. In this blog post, Fyka Ansari interviews Kaslin Fields , a DevRel Engineer at Google, who is a chair of SIG ContribEx, and Madhav Jivrajani , a Software Engineer at VMWare who serves as a SIG ContribEx Tech Lead. This interview covers various aspects of SIG ContribEx, including current initiatives, exciting developments, and how interested individuals can get involved and contribute to the group. It provides valuable insights into the workings of SIG ContribEx and highlights the importance of its role in the Kubernetes ecosystem. Fyka: Let’s start by diving into your background and how you got involved in the Kubernetes ecosystem. Can you tell us more about that journey? Kaslin: I first got involved in the Kubernetes ecosystem through my mentor, Jonathan Rippy, who introduced me to containers during my early days in tech. Eventually, I transitioned to a team working with containers, which sparked my interest in Kubernetes when it was announced.</description></item><item><title>Blog: Spotlight on SIG CLI</title><link>https://kubermates.org/docs/2023-07-20-blog-spotlight-on-sig-cli/</link><pubDate>Thu, 20 Jul 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-07-20-blog-spotlight-on-sig-cli/</guid><description>Spotlight on SIG CLI Introductions About SIG CLI Current projects and challenges Future plans and contribution In the world of Kubernetes, managing containerized applications at scale requires powerful and efficient tools. The command-line interface (CLI) is an integral part of any developer or operator’s toolkit, offering a convenient and flexible way to interact with a Kubernetes cluster. SIG CLI plays a crucial role in improving the Kubernetes CLI experience by focusing on the development and enhancement of kubectl , the primary command-line tool for Kubernetes. kubectl In this SIG CLI Spotlight, Arpit Agrawal, SIG ContribEx-Comms team member, talked with Katrina Verey , Tech Lead &amp;amp; Chair of SIG CLI,and Maciej Szulik , SIG CLI Batch Lead, about SIG CLI, current projects, challenges and how anyone can get involved. So, whether you are a seasoned Kubernetes enthusiast or just getting started, understanding the significance of SIG CLI will undoubtedly enhance your Kubernetes journey. Arpit : Could you tell us a bit about yourself, your role, and how you got involved in SIG CLI? Maciej : I’m one of the technical leads for SIG-CLI. I was working on Kubernetes in multiple areas since 2014, and in 2018 I got appointed a lead. Katrina : I’ve been working with Kubernetes as an end-user since 2016, but it was only in late 2019 that I discovered how well SIG CLI aligned with my experience from internal projects. I started regularly attending meetings and made a few small PRs, and by 2021 I was working more deeply with the Kustomize team specifically. Later that year, I was appointed to my current roles as subproject owner for Kustomize and KRM Functions, and as SIG CLI Tech Lead and Chair. Arpit : Thank you! Could you share with us the purpose and goals of SIG CLI? Maciej : Our charter has the most detailed description, but in few words, we handle all CLI tooling that helps you manage your Kubernetes manifests and interact with your Kubernetes clusters. And how does SIG CLI work to promote best-practices for CLI development and usage in the cloud native ecosystem? Maciej : Within kubectl , we have several on-going efforts that try to encourage new contributors to align existing commands to new standards.</description></item><item><title>Blog: Spotlight on SIG Network</title><link>https://kubermates.org/docs/2023-05-09-blog-spotlight-on-sig-network/</link><pubDate>Tue, 09 May 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-05-09-blog-spotlight-on-sig-network/</guid><description>Spotlight on SIG Network Networking is one of the core pillars of Kubernetes, and the Special Interest Group for Networking (SIG Network) is responsible for developing and maintaining the networking features of Kubernetes. It covers all aspects to ensure Kubernetes provides a reliable and scalable network infrastructure for containerized applications. In this SIG Network spotlight, Sujay Dey talked with Shane Utt , Software Engineer at Kong, chair of SIG Network and maintainer of Gateway API, on different aspects of the SIG, what are the exciting things going on and how anyone can get involved and contribute here. Sujay : Hello, and first of all, thanks for the opportunity of learning more about SIG Network. I would love to hear your story, so could you please tell us a bit about yourself, your role, and how you got involved in Kubernetes, especially in SIG Network? Shane : Hello! Thank you for reaching out. My Kubernetes journey started while I was working for a small data centre: we were early adopters of Kubernetes and focused on using Kubernetes to provide SaaS products. That experience led to my next position developing a distribution of Kubernetes with a focus on networking. During this period in my career, I was active in SIG Network (predominantly as a consumer). When I joined Kong my role in the community changed significantly, as Kong actively encourages upstream participation. I greatly increased my engagement and contributions to the Gateway API project during those years, and eventually became a maintainer. I care deeply about this community and the future of our technology, so when a chair position for the SIG became available, I volunteered my time immediately. I’ve enjoyed working on Kubernetes over the better part of a decade and I want to continue to do my part to ensure our community and technology continues to flourish.</description></item><item><title>Blog: E2E Testing Best Practices, Reloaded</title><link>https://kubermates.org/docs/2023-04-12-blog-e2e-testing-best-practices-reloaded/</link><pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-04-12-blog-e2e-testing-best-practices-reloaded/</guid><description>E2E Testing Best Practices, Reloaded Overall architecture Debuggability Recovering from test failures Interrupting tests Polling and timeouts Tips for writing and debugging long-running tests Next steps End-to-end (E2E) testing in Kubernetes is how the project validates functionality with real clusters. Contributors sooner or later encounter it when asked to write E2E tests for new features or to help with debugging test failures. Cluster admins or vendors might run the conformance tests, a subset of all tests in the E2E test suite. The underlying E2E framework for writing these E2E tests has been around for a long time. Functionality was added to it as needed, leading to code that became hard to maintain and use. The testing commons WG started cleaning it up, but dissolved before completely achieving their goals. After the migration to Gingko v2 in Kubernetes 1. 25, I picked up several of the loose ends and started untangling them. This blog post is a summary of those changes. Some of this content is also found in the Kubernetes contributor document about writing good E2E tests and gets reproduced here to raise awareness that the document has been updated. At the moment, the framework is used in-tree for testing against a cluster ( test/e2e ), testing kubeadm ( test/e2e_kubeadm ) and kubelet ( test/e2e_node ). The goal is to make the core test/e2e/framework a package that has no dependencies on internal code and that can be used in different E2E suites without polluting them with features or options that make no sense for them.</description></item><item><title>Blog: From Zero to Kubernets Subproject Lead</title><link>https://kubermates.org/docs/2023-03-29-blog-from-zero-to-kubernets-subproject-lead/</link><pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-03-29-blog-from-zero-to-kubernets-subproject-lead/</guid><description>From Zero to Kubernets Subproject Lead Starting up Always learning Why you - a beginner - are important to the project Getting started in any open-source community can be daunting, especially if it’s a big one like Kubernetes. I wrote this post to share my experience and encourage others to join up. All it takes is some curiosity and a willingness to show up! Here’s how my journey unfolded at a high level: What am I interested in? Is there a SIG (Special Interest Group) or a WG (Working Group) that is dedicated to that topic, or something similar? Sign up for their mailing list and start hopping on meetings. When (never if!) there are opportunities to help out and it aligns with your skills and desired growth areas, raise your hand. Ask for lots of help and don’t be shy about not knowing everything (or anything!) Keep plugging along, even if progress isn’t as fast as you would like it to be. First things first. What are you interested in learning more about? There are so many wonderful SIGs and working groups in the Kubernetes community: there’s something for everyone. And continuing to show up and participate will be so much easier if you think what you are doing is interesting. Likewise, continued participation is what keeps the community thriving, so that interest will drive you to have more of an impact. Also: it’s ok to show up knowing nothing! I remember showing up knowing very little about Kubernetes or how the community itself worked. And while I know more about how the community functions today, I am still learning all the time about it and the project. Fortunately, the community is full of friendly people who want to help you learn.</description></item><item><title>Blog: Introducing KWOK: Kubernetes WithOut Kubelet</title><link>https://kubermates.org/docs/2023-03-01-blog-introducing-kwok-kubernetes-without-kubelet/</link><pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-03-01-blog-introducing-kwok-kubernetes-without-kubelet/</guid><description>Introducing KWOK: Kubernetes WithOut Kubelet What is KWOK? Why use KWOK? What are the use cases? What are the limitations? Getting started Getting Involved Author: Shiming Zhang (DaoCloud), Wei Huang (Apple), Yibo Zhuang (Apple) Have you ever wondered how to set up a cluster of thousands of nodes just in seconds, how to simulate real nodes with a low resource footprint, and how to test your Kubernetes controller at scale without spending much on infrastructure? If you answered “yes” to any of these questions, then you might be interested in KWOK, a toolkit that enables you to create a cluster of thousands of nodes in seconds. KWOK stands for Kubernetes WithOut Kubelet. So far, it provides two tools: kwok kwok kwokctl kwokctl kwok KWOK has several advantages: Speed : You can create and delete clusters and nodes almost instantly, without waiting for boot or provisioning. Compatibility : KWOK works with any tools or clients that are compliant with Kubernetes APIs, such as kubectl, helm, kui, etc. Portability : KWOK has no specific hardware or software requirements. You can run it using pre-built images, once Docker or Nerdctl is installed. Alternatively, binaries are also available for all platforms and can be easily installed. Flexibility : You can configure different node types, labels, taints, capacities, conditions, etc. , and you can configure different pod behaviors, status, etc. to test different scenarios and edge cases. Performance : You can simulate thousands of nodes on your laptop without significant consumption of CPU or memory resources. KWOK can be used for various purposes: Learning : You can use KWOK to learn about Kubernetes concepts and features without worrying about resource waste or other consequences.</description></item><item><title>Blog: Spotlight on SIG Instrumentation</title><link>https://kubermates.org/docs/2023-02-03-blog-spotlight-on-sig-instrumentation/</link><pubDate>Fri, 03 Feb 2023 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2023-02-03-blog-spotlight-on-sig-instrumentation/</guid><description>Spotlight on SIG Instrumentation About SIG Instrumentation Current status and ongoing challenges Community and contribution Observability requires the right data at the right time for the right consumer (human or piece of software) to make the right decision. In the context of Kubernetes, having best practices for cluster observability across all Kubernetes components is crucial. SIG Instrumentation helps to address this issue by providing best practices and tools that all other SIGs use to instrument Kubernetes components-like the API server , scheduler , kubelet and kube-controller-manager. In this SIG Instrumentation spotlight, Imran Noor Mohamed , SIG ContribEx-Comms tech lead talked with Elana Hashman , and Han Kang , chairs of SIG Instrumentation, on how the SIG is organized, what are the current challenges and how anyone can get involved and contribute. Imran (INM) : Hello, thank you for the opportunity of learning more about SIG Instrumentation. Could you tell us a bit about yourself, your role, and how you got involved in SIG Instrumentation? Han (HK) : I started in SIG Instrumentation in 2018, and became a chair in 2020. I primarily got involved with SIG instrumentation due to a number of upstream issues with metrics which ended up affecting GKE in bad ways. As a result, we ended up launching an initiative to stabilize our metrics and make metrics a proper API. Elana (EH) : I also joined SIG Instrumentation in 2018 and became a chair at the same time as Han. I was working as a site reliability engineer (SRE) on bare metal Kubernetes clusters and was working to build out our observability stack. I encountered some issues with label joins where Kubernetes metrics didn’t match kube-state-metrics ( KSM ) and started participating in SIG meetings to improve things. I helped test performance improvements to kube-state-metrics and ultimately coauthored a KEP for overhauling metrics in the 1.</description></item><item><title>Blog: Prow and Tide for Kubernetes Contributors</title><link>https://kubermates.org/docs/2022-12-12-blog-prow-and-tide-for-kubernetes-contributors/</link><pubDate>Mon, 12 Dec 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-12-12-blog-prow-and-tide-for-kubernetes-contributors/</guid><description>Prow and Tide for Kubernetes Contributors Why is this helpful Back to squashing Assignment, review, approval. More about Prow and Tide More advanced usage Authors: Chris Short , Frederico Muñoz In my work in the Kubernetes world, I look up a label or Prow command often. The systems behind the scenes ( Prow and Tide ) are here to help Kubernetes Contributors get stuff done. Labeling which SIG, WG, or subproject is as important as the issue or PR having someone assigned. To quote the docs , “Tide is a Prow component for managing a pool of GitHub PRs that match a given set of criteria. It will automatically retest PRs that meet the criteria (’tide comes in’) and automatically merge them when they have up-to-date passing test results (’tide goes out’). ” What actually prompted this article is the awesomely amazing folks on the Contributor Comms team saying, “I need to squash my commits and push that. ” Which immediately made me remember the wonder of the Tide label: tide/merge-method-squash. tide/merge-method-squash Contributing to Kubernetes will, most of the time, involve some kind of git-based action, specifically on the Kubernetes GitHub. This can be an obstacle to those less exposed to git and/or GitHub, and is especially noticeable when we’re dealing with non-code contributions (documentation, blog posts, etc. ). git When a contributor submits something, it will generally be through a pull request.</description></item><item><title>Blog: Implementing the Auto-refreshing Official Kubernetes CVE Feed</title><link>https://kubermates.org/docs/2022-09-12-blog-implementing-the-auto-refreshing-official-kubernetes-cve-feed/</link><pubDate>Mon, 12 Sep 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-09-12-blog-implementing-the-auto-refreshing-official-kubernetes-cve-feed/</guid><description>Implementing the Auto-refreshing Official Kubernetes CVE Feed Implementation Details Pre-requisites Building on existing tooling Design Considerations Integrity and Access Control Protections Freshness Guarantees What’s Next? Author : Pushkar Joglekar (VMware) Accompanying the release of Kubernetes v1. 25, we announced availability of an official CVE feed as an alpha feature. This blog will cover how we implemented this feature. alpha An auto-refreshing CVE feed allows users and implementers to programmatically fetch the list of CVEs announced by the Kubernetes SRC (Security Response Committee). To ensure freshness and minimal maintainer overhead, the feed updates automatically by fetching the CVE related information from the CVE announcement GitHub Issues. Creating these issues is already part of the existing Security Response Committee (SRC) workflow. Until December 2021, it was not possible to filter for issues or PRs that are tied to CVEs announced by Kubernetes SRC. We added a new label, official-cve-feed to address that, and SIG-Security labelled relevant issues with it. The in-scope issues are closed issues for which there is a CVE ID(s) and is officially announced as a Kubernetes security vulnerability by SRC. You can now filter on all of these issues and find them here. official-cve-feed closed For future security vulnerabilities, we added the label to the SRC playbook so that all the future in-scope issues will automatically have this label. For the next step, we created a prow job in order to periodically query the GitHub REST API and pull the relevant issues.</description></item><item><title>Blog: Enhancements Opt-in Process Change for v1.26</title><link>https://kubermates.org/docs/2022-09-09-blog-enhancements-opt-in-process-change-for-v1-26/</link><pubDate>Fri, 09 Sep 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-09-09-blog-enhancements-opt-in-process-change-for-v1-26/</guid><description>Enhancements Opt-in Process Change for v1. 26 Context and Motivations How does the Github Project Board work? What does this mean for the community? Author: Grace Nguyen Since the inception of the Kubernetes release team, we have used a spreadsheet to keep track of enhancements for the release. The project has scaled massively in the past few years, with almost a hundred enhancements collected for the 1. 24 release. This process has become error-prone and time consuming. A lot of manual work is required from the release team and the SIG leads to populate KEPs data in the sheet. We have received continuous feedback from our contributors to streamline the process. Starting with the 1. 26 release, we are replacing the enhancements tracking spreadsheet with an automated GitHub project board. The board is populated with a script gathering all KEP issues in the kubernetes/enhancements repo that have the label lead-opted-in. The enhancements’ stage and SIG information will also be automatically pulled from the KEP issue. kubernetes/enhancements lead-opted-in After the KEP is populated on the Github Project Board, the Enhancements team will manually update the KEP with the label tracked/yes , tracked/no and on occasions, tracked/out-of-tree.</description></item><item><title>Blog: Spotlight on SIG Storage</title><link>https://kubermates.org/docs/2022-08-22-blog-spotlight-on-sig-storage/</link><pubDate>Mon, 22 Aug 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-08-22-blog-spotlight-on-sig-storage/</guid><description>Spotlight on SIG Storage About SIG Storage Storage and Kubernetes Ongoing challenges Community involvement Since the very beginning of Kubernetes, the topic of persistent data and how to address the requirement of stateful applications has been an important topic. Support for stateless deployments was natural, present from the start, and garnered attention, becoming very well-known. Work on better support for stateful applications was also present from early on, with each release increasing the scope of what could be run on Kubernetes. Message queues, databases, clustered filesystems: these are some examples of the solutions that have different storage requirements and that are, today, increasingly deployed in Kubernetes. Dealing with ephemeral and persistent storage, local or remote, file or block, from many different vendors, while considering how to provide the needed resiliency and data consistency that users expect, all of this is under SIG Storage’s umbrella. In this SIG Storage spotlight, Frederico Muñoz (Cloud &amp;amp; Architecture Lead at SAS) talked with Xing Yang , Tech Lead at VMware and co-chair of SIG Storage, on how the SIG is organized, what are the current challenges and how anyone can get involved and contribute. Frederico (FSM) : Hello, thank you for the opportunity of learning more about SIG Storage. Could you tell us a bit about yourself, your role, and how you got involved in SIG Storage. Xing Yang (XY) : I am a Tech Lead at VMware, working on Cloud Native Storage. I am also a Co-Chair of SIG Storage. I started to get involved in K8s SIG Storage at the end of 2017, starting with contributing to the VolumeSnapshot project. At that time, the VolumeSnapshot project was still in an experimental, pre-alpha stage.</description></item><item><title>Blog: Meet Our Contributors - APAC (China region)</title><link>https://kubermates.org/docs/2022-08-15-blog-meet-our-contributors-apac-china-region/</link><pubDate>Mon, 15 Aug 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-08-15-blog-meet-our-contributors-apac-china-region/</guid><description>Meet Our Contributors - APAC (China region) Andy Zhang Shiming Zhang Paco Xu Jintao Zhang Authors &amp;amp; Interviewers: Avinesh Tripathi , Debabrata Panigrahi , Jayesh Srivastava , Priyanka Saggu , Purneswar Prasad , Vedant Kakde Hello, everyone 👋 Welcome back to the third edition of the “Meet Our Contributors” blog post series for APAC. This post features four outstanding contributors from China, who have played diverse leadership and community roles in the upstream Kubernetes project. So, without further ado, let’s get straight to the article. Andy Zhang currently works for Microsoft China at the Shanghai site. His main focus is on Kubernetes storage drivers. Andy started contributing to Kubernetes about 5 years ago. He states that as he is working in Azure Kubernetes Service team and spends most of his time contributing to the Kubernetes community project. Now he is the main contributor of quite a lot Kubernetes subprojects such as Kubernetes cloud provider code. His open source contributions are mainly self-motivated. In the last two years he has mentored a few students contributing to Kubernetes through the LFX Mentorship program, some of whom got jobs due to their expertise and contributions on Kubernetes projects. Andy is an active member of the China Kubernetes community. He adds that the Kubernetes community has a good guide about how to become members, code reviewers, approvers and finally when he found out that some open source projects are in the very early stage, he actively contributed to those projects and became the project maintainer.</description></item><item><title>Blog: Enhancing Kubernetes one KEP at a Time</title><link>https://kubermates.org/docs/2022-08-11-blog-enhancing-kubernetes-one-kep-at-a-time/</link><pubDate>Thu, 11 Aug 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-08-11-blog-enhancing-kubernetes-one-kep-at-a-time/</guid><description>Enhancing Kubernetes one KEP at a Time What’s the enhancements subteam? What does the enhancements subteam do? How can I get involved with the release team? How can I find out more? Author: Ryler Hockenbury (Mastercard) Did you know that Kubernetes v1. 24 has 46 enhancements ? That’s a lot of new functionality packed into a 4-month release cycle. The Kubernetes release team coordinates the logistics of the release, from remediating test flakes to publishing updated docs. It’s a ton of work, but they always deliver. The release team comprises around 30 people across six subteams - Bug Triage, CI Signal, Enhancements, Release Notes, Communications, and Docs. Each of these subteams manages a component of the release. This post will focus on the role of the enhancements subteam and how you can get involved. Great question. We’ll get to that in a second but first, let’s talk about how features are managed in Kubernetes. Each new feature requires a Kubernetes Enhancement Proposal - KEP for short. KEPs are small structured design documents that provide a way to propose and coordinate new features. The KEP author describes the motivation, design (and alternatives), risks, and tests - then community members provide feedback to build consensus.</description></item><item><title>Blog: Spotlight on SIG Docs</title><link>https://kubermates.org/docs/2022-08-02-blog-spotlight-on-sig-docs/</link><pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-08-02-blog-spotlight-on-sig-docs/</guid><description>Spotlight on SIG Docs Introduction A summary of the conversation Could you tell us a little bit about what SIG Docs does? There are 2 subprojects under Docs: blogs and localization. How has the community benefited from it and are there some interesting contributions by those teams you want to highlight? Recently there has been a lot of buzz around the Kubernetes ecosystem as well as the industry regarding the removal of dockershim in the latest 1. 24 release. How has SIG Docs helped the project to ensure a smooth change among the end-users? Why should new and existing contributors consider joining this SIG? How do you help new contributors get started? Are there any prerequisites to join? Any SIG related accomplishment that you’re really proud of? Is there something exciting coming up for the future of SIG Docs that you want the community to know? Wrap Up Author: Purneswar Prasad The official documentation is the go-to source for any open source project. For Kubernetes, it’s an ever-evolving Special Interest Group (SIG) with people constantly putting in their efforts to make details about the project easier to consume for new contributors and users. SIG Docs publishes the official documentation on kubernetes. io which includes, but is not limited to, documentation of the core APIs, core architectural details, and CLI tools shipped with the Kubernetes release. To learn more about the work of SIG Docs and its future ahead in shaping the community, I have summarised my conversation with the co-chairs, Divya Mohan (DM), Rey Lejano (RL) and Natali Vlatko (NV), who ran through the SIG’s goals and how fellow contributors can help. SIG Docs is the special interest group for documentation for the Kubernetes project on kubernetes. io, generating reference guides for the Kubernetes API, kubeadm and kubectl as well as maintaining the official website’s infrastructure and analytics. The remit of their work also extends to docs releases, translation of docs, improvement and adding new features to existing documentation, pushing and reviewing content for the official Kubernetes blog and engaging with the Release Team for each cycle to get docs and blogs reviewed. Blogs : This subproject highlights new or graduated Kubernetes enhancements, community reports, SIG updates or any relevant news to the Kubernetes community such as thought leadership, tutorials and project updates, such as the Dockershim removal and removal of PodSecurityPolicy, which is upcoming in the 1.</description></item><item><title>Blog: Contextual Logging in Kubernetes 1.24</title><link>https://kubermates.org/docs/2022-05-25-blog-contextual-logging-in-kubernetes-1-24/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-05-25-blog-contextual-logging-in-kubernetes-1-24/</guid><description>Contextual Logging in Kubernetes 1. 24 Structured logging Contextual logging klog enhancements Contextual logging API ktesting logger klogr Reusable output test Output flushing Various other changes logcheck Next steps Authors: Patrick Ohly (Intel) The Structured Logging Working Group has added new capabilities to the logging infrastructure in Kubernetes 1. 24. This blog post explains how developers can take advantage of those to make log output more useful and how they can get involved with improving Kubernetes. The goal of structured logging is to replace C-style formatting and the resulting opaque log strings with log entries that have a well-defined syntax for storing message and parameters separately, for example as a JSON struct. When using the traditional klog text output format for structured log calls, strings were originally printed with \n escape sequences, except when embedded inside a struct. For structs, log entries could still span multiple lines, with no clean way to split the log stream into individual entries: \n I1112 14:06:35. 783529 328441 structured_logging. go:51] &amp;ldquo;using InfoS&amp;rdquo; longData={Name:long Data:Multiple lines with quite a bit of text. internal:0} I1112 14:06:35. 783549 328441 structured_logging. go:52] &amp;ldquo;using InfoS with\nthe message across multiple lines&amp;rdquo; int=1 stringData=&amp;ldquo;long: Multiple\nlines\nwith quite a bit\nof text.</description></item><item><title>Blog: February 2022 Community Meeting Highlights</title><link>https://kubermates.org/docs/2022-05-05-blog-february-2022-community-meeting-highlights/</link><pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-05-05-blog-february-2022-community-meeting-highlights/</guid><description>February 2022 Community Meeting Highlights Author: Nigel Brown (VMware) We just had our first contributor community meeting this year, and it was awesome to be back with you in that format. These meetings will be happening on Zoom once per month, on the third Thursday of the month - that should be available in your calendar if you’re subscribed to the k-dev mailing list. Community meetings are an opportunity for you to meet synchronously with other members of the Kubernetes community to talk about issues of general appeal. This meeting kicked off with an update on the 1. 24 release with Xander Grzywinski, who is one of the shadows for the release team leads. This release is scheduled for April 19, 2022 with a code freeze scheduled for March 30th. At the time of the meeting there were 66 individual enhancements included, as well as bug fixes. You can join the conversation on Slack in #sig-release. Update: Kubernetes 1. 24 was delayed and released on May 3, 2022. From there, the discussion moved to the dockershim removal and the docs updates we need to make around that, with the discussion led by Kat Cosgrove. The main takeaway was that if you have a platform, talk to folks about this change.</description></item><item><title>Blog: K8s CI Bot Helper Job: automating "make update"</title><link>https://kubermates.org/docs/2022-03-15-blog-k8s-ci-bot-helper-job-automating-make-update/</link><pubDate>Tue, 15 Mar 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-03-15-blog-k8s-ci-bot-helper-job-automating-make-update/</guid><description>K8s CI Bot Helper Job: automating &amp;ldquo;make update&amp;rdquo; Why is this needed? Potential Workaround Possible solutions to counter the above errors The current situation Solutions Implementing the Short Term Workaround Conclusion Authors: Subhasmita Swain , Davanum Srinivas If you are contributing to the Kubernetes project and are developing on a Windows PC, it is conceivable that you will encounter certain issues that will cause your pull request to get held up by test failures. This article describes a workaround for a similar issue I encountered when attempting to have my modifications approved and merged into the master branch. While contributing to kubernetes/kubernetes for some minor documentation changes, the pushed changes needed to be updated with other verified contents of the entire documentation. So, in order for the change to take effect, a single command must be performed to ensure that all tests on the CI pipeline pass. The single command make update runs all presubmission verification tests. For some reason on the “Windows Subsystem for Linux” environment the tests, specifically the update-openapi-spec. sh script, failed (in my case, take a look at the conversation here ), eventually failing the pull-kubernetes-verify tests. make update pull-kubernetes-verify You might encounter the following on your PR The tests failing the particular issue: Consecutively, Additionally one can check the failed test via the link provided under details in the above image. link Run the failing. sh scripts individually known from the CI job output, to generate the expected files to fix up the failures. The. sh scripts can be found residing under the hack/ directory at the root of the kubernetes/kubernetes code base.</description></item><item><title>Blog: Meet Our Contributors - APAC (Aus-NZ region)</title><link>https://kubermates.org/docs/2022-03-14-blog-meet-our-contributors-apac-aus-nz-region/</link><pubDate>Mon, 14 Mar 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-03-14-blog-meet-our-contributors-apac-aus-nz-region/</guid><description>Meet Our Contributors - APAC (Aus-NZ region) Caleb Woodbine Dylan Graham Hippie Hacker Nick Young Authors &amp;amp; Interviewers: Anubhav Vardhan , Atharva Shinde , Avinesh Tripathi , Brad McCoy , Debabrata Panigrahi , Jayesh Srivastava , Kunal Verma , Pranshu Srivastava , Priyanka Saggu , Purneswar Prasad , Vedant Kakde Good day, everyone 👋 Welcome back to the second episode of the “Meet Our Contributors” blog post series for APAC. This post will feature four outstanding contributors from the Australia and New Zealand regions, who have played diverse leadership and community roles in the Upstream Kubernetes project. So, without further ado, let’s get straight to the article. Caleb Woodbine is currently a member of the ii. nz organisation. He began contributing to the Kubernetes project in 2018 as a member of the Kubernetes Conformance working group. His experience was positive, and he benefited from early guidance from Hippie Hacker , a fellow contributor from New Zealand. He has made major contributions to Kubernetes project since then through SIG k8s-infra and k8s-conformance working group. SIG k8s-infra k8s-conformance Caleb is also a co-organizer of the CloudNative NZ community events, which aim to expand the reach of Kubernetes project throughout New Zealand in order to encourage technical education and improved employment opportunities. There need to be more outreach in APAC and the educators and universities must pick up Kubernetes, as they are very slow and about 8+ years out of date. NZ tends to rather pay overseas than educate locals on the latest cloud tech Locally. Dylan Graham is a cloud engineer from Adeliade, Australia.</description></item><item><title>Blog: SIG Node CI Subproject Celebrates Two Years of Test Improvements</title><link>https://kubermates.org/docs/2022-02-16-blog-sig-node-ci-subproject-celebrates-two-years-of-test-improvements/</link><pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-02-16-blog-sig-node-ci-subproject-celebrates-two-years-of-test-improvements/</guid><description>SIG Node CI Subproject Celebrates Two Years of Test Improvements Timeline Statistics Future Authors: Sergey Kanzhelev (Google), Elana Hashman (Red Hat) Ensuring the reliability of SIG Node upstream code is a continuous effort that takes a lot of behind-the-scenes effort from many contributors. There are frequent releases of Kubernetes, base operating systems, container runtimes, and test infrastructure that result in a complex matrix that requires attention and steady investment to “keep the lights on. ” In May 2020, the Kubernetes node special interest group (“SIG Node”) organized a new subproject for continuous integration (CI) for node-related code and tests. Since its inauguration, the SIG Node CI subproject has run a weekly meeting, and even the full hour is often not enough to complete triage of all bugs, test-related PRs and issues, and discuss all related ongoing work within the subgroup. Over the past two years, we’ve fixed merge-blocking and release-blocking tests, reducing time to merge Kubernetes contributors’ pull requests thanks to reduced test flakes. When we started, Node test jobs only passed 42% of the time, and through our efforts, we now ensure a consistent &amp;gt;90% job pass rate. We’ve closed 144 test failure issues and merged 176 pull requests just in kubernetes/kubernetes. And we’ve helped subproject participants ascend the Kubernetes contributor ladder, with 3 new org members, 6 new reviewers, and 2 new approvers. The Node CI subproject is an approachable first stop to help new contributors get started with SIG Node. There is a low barrier to entry for new contributors to address high-impact bugs and test fixes, although there is a long road before contributors can climb the entire contributor ladder: it took over a year to establish two new approvers for the group. The complexity of all the different components that power Kubernetes nodes and its test infrastructure requires a sustained investment over a long period for developers to deeply understand the entire system, both at high and low levels of detail. We have several regular contributors at our meetings, however; our reviewers and approvers pool is still small.</description></item><item><title>Blog: Spotlight on SIG Multicluster</title><link>https://kubermates.org/docs/2022-02-04-blog-spotlight-on-sig-multicluster/</link><pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-02-04-blog-spotlight-on-sig-multicluster/</guid><description>Spotlight on SIG Multicluster Introduction A summary of their conversation Wrap up Authors: Dewan Ahmed (Aiven) and Chris Short (AWS) SIG Multicluster is the Special Interest Group (SIG) focused on how Kubernetes concepts are expanded and used beyond the cluster boundary. Historically, Kubernetes resources only interacted within that boundary - KRU or Kubernetes Resource Universe (not an actual Kubernetes concept). Kubernetes clusters, even now, don’t really know anything about themselves or, about other clusters. Absence of cluster identifiers is a case in point. With the growing adoption of multicloud and multicluster deployments, the work SIG Multicluster doing is gaining a lot of attention. In this article, Jeremy Olmsted-Thompson, Google and Chris Short, AWS discuss the interesting problems SIG Multicluster is solving and how you can get involved. Their initials JOT and CS will be used for brevity. CS : How long has the SIG Multicluster existed and how was the SIG in its infancy? How long have you been with this SIG? JOT : I’ve been around for almost two years in the SIG Multicluster. All I know about the infancy years is from the lore but even in the early days, it was always about solving this same problem. Early efforts have been things like KubeFed. I think there are still folks using KubeFed but it’s a smaller slice. Back then, I think people out there deploying large numbers of Kubernetes clusters were really not at a point where we had a ton of real concrete use cases.</description></item><item><title>Blog: Meet Our Contributors - APAC (India region)</title><link>https://kubermates.org/docs/2022-01-10-blog-meet-our-contributors-apac-india-region/</link><pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2022-01-10-blog-meet-our-contributors-apac-india-region/</guid><description>Meet Our Contributors - APAC (India region) Arsh Sharma Kunal Kushwaha Madhav Jivarajani Rajas Kakodkar Rajula Vineeth Reddy Authors &amp;amp; Interviewers: Anubhav Vardhan , Atharva Shinde , Avinesh Tripathi , Debabrata Panigrahi , Kunal Verma , Pranshu Srivastava , Pritish Samal , Purneswar Prasad , Vedant Kakde Editor: Priyanka Saggu Good day, everyone 👋 Welcome to the first episode of the APAC edition of the “Meet Our Contributors” blog post series. In this post, we’ll introduce you to five amazing folks from the India region who have been actively contributing to the upstream Kubernetes projects in a variety of ways, as well as being the leaders or maintainers of numerous community initiatives. 💫 Let’s get started, so without further ado… Arsh is currently employed with Okteto as a Developer Experience engineer. As a new contributor, he realised that 1:1 mentorship opportunities were quite beneficial in getting him started with the upstream project. He is presently a CI Signal shadow on the Kubernetes 1. 23 release team. He is also contributing to the SIG Testing and SIG Docs projects, as well as to the cert-manager tools development work that is being done under the aegis of SIG Architecture. To the newcomers, Arsh helps plan their early contributions sustainably. I would encourage folks to contribute in a way that’s sustainable. What I mean by that is that it’s easy to be very enthusiastic early on and take up more stuff than one can actually handle. This can often lead to burnout in later stages. It’s much more sustainable to work on things iteratively.</description></item><item><title>Blog: Announcing the Kubernetes Contributor Celebration 2021</title><link>https://kubermates.org/docs/2021-12-07-blog-announcing-the-kubernetes-contributor-celebration-2021/</link><pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2021-12-07-blog-announcing-the-kubernetes-contributor-celebration-2021/</guid><description>Announcing the Kubernetes Contributor Celebration 2021 Contributor Celebration 2021 Registration Events and Activities Schedule See you all at the event By Debabrata Panigrahi It’s that time of the year again, Yayy!! Like last year, this year also we are back with Kubernetes Contributor Celebration, the annual end of the year celebration, to recognize our achievements and have some fun! It’s a time for us to relax, chat and do something fun with your fellow contributors! To register, please fill out the Registration Form. More details on how to join the event. DevOps Party Games “DevOps Party Games takes the idea of “online party games” and tilts it on its head by adding DevOps-inspired content to existing games, and then streams it live via Twitch for a worldwide audience to watch, comment, and hopefully be entertained. In addition, the hosts (Matt Stratton, Jeremy Meiss, and Dan Maher) will provide color commentary, much like a modern day Cotton McKnight and Pepper Brooks (announcers from Dodgeball). ” There will be a Kubernetes slant for this edition of DevOps Party Games. DevOps Party Games “DevOps Party Games takes the idea of “online party games” and tilts it on its head by adding DevOps-inspired content to existing games, and then streams it live via Twitch for a worldwide audience to watch, comment, and hopefully be entertained. In addition, the hosts (Matt Stratton, Jeremy Meiss, and Dan Maher) will provide color commentary, much like a modern day Cotton McKnight and Pepper Brooks (announcers from Dodgeball). ” There will be a Kubernetes slant for this edition of DevOps Party Games. The Great Cloud Native Bakeoff A virtual cooking event styled after the Great British Bake-off will be held during the Kubernetes Celebration Event. Contestants will have 90 minutes to bake something related to to your Cloud Native experience. Anything goes, as long as the majority of preparation is done live. The competition is open to all skill levels, from baking from a cake mix to grinding your own flour as long as it’s somehow Kubernetes-themed.</description></item><item><title>Blog: Improve your documentation with Mermaid.js diagrams</title><link>https://kubermates.org/docs/2021-12-01-blog-improve-your-documentation-with-mermaid-js-diagrams/</link><pubDate>Wed, 01 Dec 2021 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2021-12-01-blog-improve-your-documentation-with-mermaid-js-diagrams/</guid><description>Improve your documentation with Mermaid. js diagrams Why are diagrams useful for documentation? Mermaid. js What do I need to start using Mermaid? Examples By Chris Metz and Tim Bannister Topics covered in this blog. Live editor link: Topics Covered Friendly landing spot. Greeting readers with a page full of text can be intimidating to those new to Kubernetes, software engineering and tech writing. Friendly landing spot. Greeting readers with a page full of text can be intimidating to those new to Kubernetes, software engineering and tech writing. Faster grasp of concepts. A diagram can serve as a visual roadmap for details covered in the accompanying text. Faster grasp of concepts. A diagram can serve as a visual roadmap for details covered in the accompanying text. Better retention.</description></item><item><title>Blog: How to choose a SIG as a non-code Kubernetes contributor</title><link>https://kubermates.org/docs/2021-07-09-blog-how-to-choose-a-sig-as-a-non-code-kubernetes-contributor/</link><pubDate>Fri, 09 Jul 2021 00:00:00 +0000</pubDate><guid>https://kubermates.org/docs/2021-07-09-blog-how-to-choose-a-sig-as-a-non-code-kubernetes-contributor/</guid><description>How to choose a SIG as a non-code Kubernetes contributor How I found my SIG How I contribute Hop into the Kubernetes community By Chris Short Kubernetes contributors aren’t people in capes or part of some secret society. How to start committing to the GitHub repos that make up the project is well documented , yet it remains intimidating for many. A few years ago, I spoke at an event and jokingly said, “Kubernetes is just a bunch of APIs and YAML… I’m a contributor; you don’t believe me?” After that talk, someone pulled me aside and asked if I was the Kubernetes contributor. They wanted to get involved in the community. Then came the real question, “I don’t know which special interest group (SIG) I would work in. ” The SIG you work in depends on your skills and what you want to do with your (or your company’s) free time. I’ll start with myself as an example. I do not code as part of my day-to-day work; I never have. While I have made bits of code into programs here and there, I always had a helping hand. It’s also possible my definition of a coder is busted too. But, I consider myself a non-code contributor to Kubernetes. I’m an Ops person that embraced DevOps early.</description></item></channel></rss>