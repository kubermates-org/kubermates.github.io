name: Auto-approve & auto-merge automation PRs

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  approve_and_enable_automerge:
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: |
          echo "head.ref=${{ github.event.pull_request.head.ref }}"
          echo "labels=${{ join(github.event.pull_request.labels.*.name, ',') }}"

      - name: Gate to bot branches
        id: gate
        run: |
          BRANCH="${{ github.event.pull_request.head.ref || '' }}"
          if [[ "$BRANCH" == bot/ingest-* ]]; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"
          fi

      # Add the automerge label (idempotent) using gh instead of a marketplace action
      - name: Ensure automerge label
        if: steps.gate.outputs.ok == 'true'
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label automerge
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Auto-approve via gh
        if: steps.gate.outputs.ok == 'true'
        run: |
          gh pr review ${{ github.event.pull_request.number }} --approve --body "Auto-approved by CI for automation PR."
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Enable auto-merge (squash) via GraphQL
        if: steps.gate.outputs.ok == 'true'
        run: |
          PR_NODE_ID='${{ github.event.pull_request.node_id }}'
          gh api graphql -f query='
            mutation($id:ID!){
              enablePullRequestAutoMerge(input:{pullRequestId:$id, mergeMethod:SQUASH}) {
                clientMutationId
              }
            }' -F id="$PR_NODE_ID"
        env:
          GH_TOKEN: ${{ github.token }}
