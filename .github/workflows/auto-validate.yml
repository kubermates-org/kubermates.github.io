name: Auto merge automation PRs (via GitHub App)

on:
  pull_request_target:
    types: [opened, synchronize, reopened, ready_for_review, labeled]
  workflow_dispatch:
    inputs:
      pr_number:
        description: PR number to auto merge
        required: true
        type: number
      require_automerge_label:
        description: Require the 'automerge' label before merging
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  pull-requests: write

jobs:
  enable_automerge:
    runs-on: ubuntu-latest

    steps:
      ###########################################################################
      # 1Ô∏è‚É£ Generate a GitHub App token (via tibdex/github-app-token)
      ###########################################################################
      - name: Generate GitHub App token
        id: app_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
          installation_retrieval_mode: repository

      ###########################################################################
      # 2Ô∏è‚É£ Resolve PR context (works for both pull_request_target + manual run)
      ###########################################################################
      - name: Resolve PR and repo
        id: resolve
        env:
          EVENT_NAME: ${{ github.event_name }}
          DEFAULT_REPO: ${{ github.repository }}
        run: |
          if [[ "$EVENT_NAME" == "workflow_dispatch" ]]; then
            PR_NUMBER="${{ inputs.pr_number }}"
            REPO="$DEFAULT_REPO"
          else
            PR_NUMBER="${{ github.event.pull_request.number }}"
            REPO="$DEFAULT_REPO"
          fi
          echo "PR_NUMBER=$PR_NUMBER" >> "$GITHUB_ENV"
          echo "REPO=$REPO" >> "$GITHUB_ENV"
          echo "event=$EVENT_NAME pr=$PR_NUMBER repo=$REPO"

      ###########################################################################
      # 3Ô∏è‚É£ Fetch PR info for gating
      ###########################################################################
      - name: Fetch PR info
        env:
          GH_TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          gh api repos/"$REPO"/pulls/"$PR_NUMBER" > pr.json
          echo "PR_HEAD_REPO=$(jq -r .head.repo.full_name pr.json)" >> "$GITHUB_ENV"
          echo "PR_HEAD_REF=$(jq -r .head.ref pr.json)" >> "$GITHUB_ENV"
          jq -r '[.labels[].name] | join(",")' pr.json | sed 's/^$/none/' > labels.txt
          echo "PR_LABELS=$(cat labels.txt)" >> "$GITHUB_ENV"

      ###########################################################################
      # 4Ô∏è‚É£ Skip PRs that modify workflow files (GitHub security restriction)
      ###########################################################################
      - name: Detect workflow file changes
        id: workflow_changes
        env:
          GH_TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          changed=$(gh api repos/"$REPO"/pulls/"$PR_NUMBER"/files --paginate | jq -r '.[].filename' | grep -c '^.github/workflows/' || true)
          if (( changed > 0 )); then
            echo "workflow_changes=true" >> "$GITHUB_OUTPUT"
            echo "Detected $changed workflow file changes ‚Äî skipping auto merge"
          else
            echo "workflow_changes=false" >> "$GITHUB_OUTPUT"
          fi

      ###########################################################################
      # 5Ô∏è‚É£ Gate logic ‚Äî only merge bot/ingest-* branches with automerge label
      ###########################################################################
      - name: Gate check
        id: gate
        env:
          REQUIRE_LABEL: ${{ inputs.require_automerge_label }}
        run: |
          echo "Head repo: $PR_HEAD_REPO"
          echo "Head ref:  $PR_HEAD_REF"
          echo "Labels:    $PR_LABELS"

          ok=true
          reason=""

          if [[ "$PR_HEAD_REPO" != "$REPO" ]]; then
            ok=false
            reason="head repo differs from base repo"
          fi

          if [[ "$PR_HEAD_REF" != bot/ingest-* ]]; then
            ok=false
            reason="branch is not bot/ingest-*"
          fi

          if [[ "$REQUIRE_LABEL" == "true" ]]; then
            if ! grep -qiE '(^|,)automerge(,|$)' <<< "$PR_LABELS"; then
              ok=false
              reason="missing automerge label"
            fi
          fi

          echo "ok=$ok" >> "$GITHUB_OUTPUT"
          echo "reason=$reason" >> "$GITHUB_OUTPUT"

          if [[ "$ok" != "true" ]]; then
            echo "Gate KO: $reason"
          else
            echo "Gate OK"
          fi

      ###########################################################################
      # 6Ô∏è‚É£ Approve PR (as GitHub App)
      ###########################################################################
      - name: Auto approve via GitHub App
        if: steps.gate.outputs.ok == 'true' && steps.workflow_changes.outputs.workflow_changes == 'false'
        env:
          GH_TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          gh pr review "$PR_NUMBER" --repo "$REPO" --approve --body "‚úÖ Auto-approved by kubermates-auto-approver"

      ###########################################################################
      # 7Ô∏è‚É£ Enable auto merge (rebase)
      ###########################################################################
      - name: Enable auto merge (rebase)
        if: steps.gate.outputs.ok == 'true' && steps.workflow_changes.outputs.workflow_changes == 'false'
        env:
          GH_TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          gh pr merge "$PR_NUMBER" --repo "$REPO" --auto --rebase

      ###########################################################################
      # 8Ô∏è‚É£ Comment result for traceability
      ###########################################################################
      - name: Comment on PR
        if: always()
        env:
          GH_TOKEN: ${{ steps.app_token.outputs.token }}
        run: |
          if [[ "${{ steps.workflow_changes.outputs.workflow_changes }}" == "true" ]]; then
            gh pr comment "$PR_NUMBER" --repo "$REPO" --body "‚ö†Ô∏è Skipped auto-merge: PR modifies workflow files."
          elif [[ "${{ steps.gate.outputs.ok }}" != "true" ]]; then
            gh pr comment "$PR_NUMBER" --repo "$REPO" --body "üö´ Auto-merge skipped: ${{ steps.gate.outputs.reason }}"
          else
            gh pr comment "$PR_NUMBER" --repo "$REPO" --body "‚úÖ Auto-merge (rebase) enabled by kubermates-auto-approver."
          fi
